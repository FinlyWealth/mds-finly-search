[
  {
    "objectID": "notebook/example/example_notebook.html",
    "href": "notebook/example/example_notebook.html",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "",
    "text": "This notebook demonstrates how to use the FinlyWealth search engine backend API with different retrieval method combinations.\nimport requests\nimport json\nimport pandas as pd\nfrom typing import Dict, List, Optional, Tuple\nimport os\nfrom pathlib import Path\nimport warnings\nwarnings.filterwarnings('ignore')\n\nprint(\"Dependencies loaded successfully!\")\n\nDependencies loaded successfully!"
  },
  {
    "objectID": "notebook/example/example_notebook.html#prerequisites",
    "href": "notebook/example/example_notebook.html#prerequisites",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nDocker and Docker Compose installed\nPython environment set up\nmake utility available\n.env file configured (see step 2)"
  },
  {
    "objectID": "notebook/example/example_notebook.html#getting-started",
    "href": "notebook/example/example_notebook.html#getting-started",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Getting Started",
    "text": "Getting Started\nFollow these steps to get the API up and running:\n\n1. Start the Database Container\nOpen your terminal and execute the following command to build and launch the database container in detached mode:\ndocker compose -f docker-compose.db.yml up -d"
  },
  {
    "objectID": "notebook/example/example_notebook.html#configure-database-credentials",
    "href": "notebook/example/example_notebook.html#configure-database-credentials",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "2. Configure Database Credentials",
    "text": "2. Configure Database Credentials\nCreate a .env file in the root directory and populate it with the required database credentials. This file is used to securely configure your environment:\n# .env file - Database configuration\nPGUSER=postgres\nPGPASSWORD=postgres\nPGHOST=localhost\nPGPORT=5432\nPGDATABASE=postgres\nPGTABLE=products"
  },
  {
    "objectID": "notebook/example/example_notebook.html#load-example-data",
    "href": "notebook/example/example_notebook.html#load-example-data",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "3. Load Example Data",
    "text": "3. Load Example Data\nUse the make utility to load the example product data and associated images into your database:\nmake train\n\n# 4. Launch the Backend API\n\nOnce the database is populated, start the backend API service by running the following Python script:\n\n```bash\npython src/backend/api.py\n\n## API Client for Search Operations\n\nThis class provides a convenient interface for interacting with the search API.\n\n::: {#cell-8 .cell execution_count=44}\n``` {.python .cell-code}\nclass SearchAPIClient:\n    \"\"\"Client for interacting with the FinlyWealth search API.\"\"\"\n    \n    def __init__(self, base_url: str = \"http://localhost:5001\"):\n        \"\"\"Initialize API client.\n\n        Args:\n            base_url: Base URL for the API\n        \"\"\"\n        self.base_url = base_url\n        self.session = requests.Session()\n    \n    def search_text(self, query: str, search_type: str = \"text\") -&gt; Dict:\n        \"\"\"Perform text search.\n\n        Args:\n            query: Search query text\n            search_type: Type of search (\"text\", \"image\", \"multimodal\")\n\n        Returns:\n            dict: Search results\n        \"\"\"\n        try:\n            data = {\n                \"query\": query,\n                \"search_type\": search_type\n            }\n\n            response = self.session.post(\n                f\"{self.base_url}/api/search\",\n                data=data,\n                timeout=60\n            )\n            response.raise_for_status()\n            return response.json()\n        \n        except requests.exceptions.RequestException as e:\n            return {\"error\": f\"Request failed: {str(e)}\"}\n\n    def search_image(self, image_path: str, search_type: str = \"image\") -&gt; Dict:\n        \"\"\"Perform image search.\n\n        Args:\n            image_path: Path to image file or URL\n            search_type: Type of search (\"text\", \"image\", \"multimodal\")\n\n        Returns:\n            dict: Search results\n        \"\"\"\n        try:\n            data = {\n                \"image_path\": image_path,\n                \"search_type\": search_type\n            }\n\n            response = self.session.post(\n                f\"{self.base_url}/api/search\",\n                data=data,\n                timeout=60\n            )\n            response.raise_for_status()\n            return response.json()\n        \n        except requests.exceptions.RequestException as e:\n            return {\"error\": f\"Request failed: {str(e)}\"}\n\n    def search_multimodal(self, query: str, image_path: str) -&gt; Dict:\n        \"\"\"Perform multimodal search with both text and image.\n\n        Args:\n            query: Search query text\n            image_path: Path to image file or URL\n\n        Returns:\n            dict: Search results\n        \"\"\"\n        try:\n            data = {\n                \"query\": query,\n                \"image_path\": image_path,\n                \"search_type\": \"multimodal\"\n            }\n\n            response = self.session.post(\n                f\"{self.base_url}/api/search\",\n                data=data,\n                timeout=60\n            )\n            response.raise_for_status()\n            return response.json()\n        \n        except requests.exceptions.RequestException as e:\n            return {\"error\": f\"Request failed: {str(e)}\"}\n\n    def check_api_status(self) -&gt; Dict:\n        \"\"\"Check API status and readiness.\n\n        Returns:\n            dict: API status information\n        \"\"\"\n        try:\n            response = self.session.get(f\"{self.base_url}/api/ready\", timeout=10)\n            response.raise_for_status()\n            return response.json()\n        except requests.exceptions.RequestException as e:\n            return {\"error\": f\"Request failed: {str(e)}\"}\n\n# Initialize API client\napi_client = SearchAPIClient()\nprint(\"API client initialized!\")\n\nAPI client initialized!\n\n:::"
  },
  {
    "objectID": "notebook/example/example_notebook.html#vannila-request",
    "href": "notebook/example/example_notebook.html#vannila-request",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Vannila Request",
    "text": "Vannila Request\nThis section shows how normal requests can be carried out via the api. These includes - Text only - Image only - Image and text"
  },
  {
    "objectID": "notebook/example/example_notebook.html#text-only-search",
    "href": "notebook/example/example_notebook.html#text-only-search",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Text Only Search",
    "text": "Text Only Search\n\ntext_query = \"leather shoes\"\n\nresults = api_client.search_text(text_query, search_type=\"text\")\n\n\nresults.keys()\n\ndict_keys(['average_price', 'brand_distribution', 'category_distribution', 'elapsed_time_sec', 'price_range', 'reasoning', 'results', 'session_id'])\n\n\nTHe request returns a dictionary with the following structure\n{\n    \"average_price\": 23.45,  # Average price of selected items\n    \"brand_distribution\": {\"Nike\": 5, \"Adidas\": 3},  # Frequency per brand\n    \"category_distribution\": {\"Shoes\": 4, \"Hats\": 2},  # Frequency per category\n    \"elapsed_time_sec\": 1.23,  # Processing time\n    \"price_range\": [10.0, 50.0],  # Min and max prices\n    \"reasoning\": \"Filtered by top-rated shoes\",  # Explanation of logic\n    \"results\": [...],  # List of results (products, recommendations, etc.)\n    \"session_id\": \"a1b2c3d4\"  # Unique identifier for the session\n}\n\nOutput Dictionary Structure\n\n\n\n\n\n\n\n\nKey\nDescription\nExample Value\n\n\n\n\naverage_price\nAverage price of the selected products\n23.45\n\n\nbrand_distribution\nCount or percentage breakdown of brands in the selection\n{'Nike': 5, 'Adidas': 3}\n\n\ncategory_distribution\nCount or percentage breakdown by product category\n{'Shoes': 4, 'Hats': 2}\n\n\nelapsed_time_sec\nTime taken to process the request in seconds\n1.23\n\n\nprice_range\nMin and max prices observed in the selection\n[10.0, 50.0]\n\n\nreasoning\nText explanation of how results were chosen\n\"Filtered by top-rated shoes\"\n\n\nresults\nList of resulting product records or summaries\n[...]\n\n\nsession_id\nUnique session identifier\n\"a1b2c3d4\""
  },
  {
    "objectID": "notebook/example/example_notebook.html#image-only-search",
    "href": "notebook/example/example_notebook.html#image-only-search",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Image only Search",
    "text": "Image only Search\n\n# Image search, we pass the \nimage_query = \"data/images/127.2.DFF8DD86A0648144.935C81483CAB9DD1.810122210719.jpeg\"\n\nresults_image = api_client.search_image(image_query)\n\n\nresults_image\n\n{'average_price': 94.5,\n 'brand_distribution': {'Dockers': 50, 'Pazstor': 50},\n 'category_distribution': {'Apparel & Accessories &gt;Shoes ': 100},\n 'elapsed_time_sec': 0.192,\n 'price_range': [80.0, 109.0],\n 'reasoning': 'Image search only, no LLM reordering performed',\n 'results': [{'Brand': 'Pazstor',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Barista brown',\n   'Description': 'These oxfords are designed to fit ergonomically offering premium Comfort, Made of Premium soft lambskin Leather. Whole size only, please choose one number above if you usually wear half number (e.g. if your size is 7.5 then go up to 8) Made in Mexico',\n   'Gender': 'male',\n   'Name': \"Pazstor Men's Premium Comfort Lambskin Leather Oxfords Classic - Barista brown\",\n   'Pid': '127.2.DFF8DD86A0648144.935C81483CAB9DD1.810122210719',\n   'Price': '109.0',\n   'Size': '12',\n   'similarity': 1.0},\n  {'Brand': 'Dockers',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Dark Tan',\n   'Description': \"Cool enough for casual adventures and polished enough for the office, these bike toe oxford men's dress shoes from Dockers effortlessly complement your everyday routine.\",\n   'Gender': 'male',\n   'Name': \"Dockers Men's Trustee Leather Oxfords - Dark Tan\",\n   'Pid': '127.2.DFF8DD86A0648144.EEF67CB2003482F3.31042444668',\n   'Price': '80.0',\n   'Size': '10W',\n   'similarity': 0.9625371098518372}],\n 'session_id': '483f91b6-5e37-4bca-82ed-833f9bcac3b9'}\n\n\nThe result has the same output as the Text search"
  },
  {
    "objectID": "notebook/example/example_notebook.html#hybrid-search-without-llm-reranking",
    "href": "notebook/example/example_notebook.html#hybrid-search-without-llm-reranking",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Hybrid Search without LLM reranking",
    "text": "Hybrid Search without LLM reranking"
  },
  {
    "objectID": "notebook/example/example_notebook.html#making-search-without-llm-reranking",
    "href": "notebook/example/example_notebook.html#making-search-without-llm-reranking",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Making search without LLM reranking",
    "text": "Making search without LLM reranking\n\nTo make search without LLM reranking, all you have to do is comment out yor API keys in your .env file, in this case I will comment out the api keys in the .env file and rerun the command python src/backend/api.py\n\n\nIf you get an error on the python src/backend/api.py command, just run make clean to free the port\n\n\n\n# Hybrid search, we pass both the image and text\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nimage_query = \"data/images/127.2.DFF8DD86A0648144.935C81483CAB9DD1.810122210719.jpeg\"\nsearch_query = \"black shoes\"\nresults_image = api_client.search_multimodal(query=search_query, image_path=image_query)\n\nresults_image\n\n{'average_price': 143.96,\n 'brand_distribution': {'8 by YOOX': 6,\n  'Bernardo Footwear': 6,\n  'Clarks': 6,\n  'Converse': 6,\n  'Deer Stags': 6,\n  'Dv Dolce Vita': 6,\n  'Easy Spirit': 6,\n  'I.n.c. International Concepts': 6,\n  'Kenneth Cole Reaction': 6,\n  'Kingsize': 6,\n  'Naturalizer': 12,\n  'Stacy Adams': 6,\n  'Teva': 6,\n  'Trotters': 6,\n  'Vince Camuto': 6,\n  'adidas': 6},\n 'category_distribution': {'Apparel & Accessories &gt;Shoes ': 100},\n 'elapsed_time_sec': 1.417,\n 'price_range': [49.99, 400.0],\n 'reasoning': 'No API key available, no LLM reordering performed',\n 'results': [{'Brand': 'Stacy Adams',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'The rich hand burnishing on the Stacy Adams Bryant cap-toe Oxford highlights the intricate lines of broguing and quality of its leather. The sophisticated style and all-day comfort of the Bryant make it the perfect choice for any special occasion.',\n   'Gender': 'male',\n   'Name': \"Stacy Adams Men's Bryant Lace-Up Cap-Toe Oxford Dress Shoes - Black\",\n   'Pid': '160244.2.C6DCFA4883B330A3.C6E5E12E04D6B496.793926254847',\n   'Price': '193.04',\n   'Size': '11',\n   'similarity': 0.5},\n  {'Brand': 'adidas',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Add a retro staple to your wardrobe with the new Gazelle Athletic Shoe from adidas! The Gazelle Athletic Shoe brings back a vintage design with modern updates, featuring a streamlined profile constructed with smooth nubuck uppers, signature side stripes, and innovative cushioning for premium comfort and support.',\n   'Gender': 'male',\n   'Name': 'Mens adidas Gazelle Athletic Shoe - Black / White',\n   'Pid': '158391.2.6B6A87FA39B97B14.4CCCA107D40A956C.366436',\n   'Price': '129.99',\n   'Size': '11.5',\n   'similarity': 0.4988675},\n  {'Brand': 'Trotters',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Kari is a mid-heel pump that brings together fashion and practicality. This modern block heel delivers stability with a bit of height. Soft nappa leathers and a cushioned footbed make for a sleek custom fit. This is The Pump for the office or date night.',\n   'Gender': 'female',\n   'Name': \"Women's Trotters Kari Pumps - Black\",\n   'Pid': '160244.2.C6DCFA4883B330A3.5502166FB2EF8F17.887246973721',\n   'Price': '148.42',\n   'Size': '6N',\n   'similarity': 0.28934845},\n  {'Brand': 'Teva',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': \"The Women's Teva Universal Originals Sandals perfectly combine comfort and style for all-season wear. These women's Teva sandals feature a hook-and-loop closure to easily adjust the fit, while the Universal strap system ensures your feet stay secure and comfortable. For grip and traction, these Teva sandals feature a rubber outsole making them great on both wet and dry surfaces. With an EVA foam footbed, you'll enjoy cushion with every step too. Be ready for your next adventure with the Teva Original Universal Women's Sandals.Features:Specs:\",\n   'Gender': 'None',\n   'Name': \"Women's Teva Original Universal Water Sandals Black\",\n   'Pid': '228963.156074.5BD1DE98FA94FFB1.BF86A1C21D02D2CB.88727820246',\n   'Price': '55.0',\n   'Size': '7',\n   'similarity': 0.28934845},\n  {'Brand': 'Converse',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Classic, all-American style and comfort combine in the Converse Chuck Taylor All Star Ox. The soft canvas upper comes in a variety of colors for a versatile look.',\n   'Gender': 'female',\n   'Name': \"Converse Women's Chuck Taylor All Star Ox Casual Sneakers from Finish Line - Black\",\n   'Pid': '127.2.DFF8DD86A0648144.BA472CC551010D32.22866822732',\n   'Price': '60.0',\n   'Size': '8',\n   'similarity': 0.28934845},\n  {'Brand': 'Deer Stags',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'A terrific shoe for the school boy! The quiet Pu outsole offers great traction and the elastic twin gore allows for a personalized fit.',\n   'Gender': 'male',\n   'Name': 'Deer Stags Little and Big Boys Wide Wings Dress Comfort Slip-On - Black',\n   'Pid': '160244.2.C6DCFA4883B330A3.3F7D33250D8F3BF5.703022781208',\n   'Price': '74.25',\n   'Size': '12.5W',\n   'similarity': 0.28774667},\n  {'Brand': 'Easy Spirit',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Stylish yet comfortable, the Clarice dress pump is a must have in your wardrobe. This pump features arch support and a cushioned insole for comfort that goes the distance.  Providing comfort over 35 years, Easy Spirit shoes are designed with benefits that keep you moving.',\n   'Gender': 'female',\n   'Name': \"Easy Spirit Women's Clarice Mary Jane Block Heel Dress Pumps - Black\",\n   'Pid': '160244.2.C6DCFA4883B330A3.63F1F4F29DF149B7.192733715723',\n   'Price': '132.16',\n   'Size': '10N',\n   'similarity': 0.28774667},\n  {'Brand': 'Bernardo Footwear',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Defy definition. This versatile, handcrafted sandal moves seamlessly from day to night,and season to season, thanks to its soft vegetable re-tanned leather upper withstatement ankle strap and easy block heel.',\n   'Gender': 'female',\n   'Name': 'Bernardo Footwear Bernardo Atlas Pump - Black',\n   'Pid': '127.2.DFF8DD86A0648144.D0FA9802B0BEAE2E.690467273361',\n   'Price': '258.0',\n   'Size': '10',\n   'similarity': 0.28774667},\n  {'Brand': 'Clarks',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Leather',\n   'Description': 'Bringing the best of boots to your most-loved looks, our Lileigh Charm leather ankle boot combines a premium feel with timeless design details. Grounded atop an ultra-wearable stack heel, it comes together with super-soft foam footbeds to deliver all the comfort of your old favorites as soon as you pull them on. Your new wardrobe staple.',\n   'Gender': 'female',\n   'Name': \"Clarks Women's Collection Lileigh Charm Boots - Black Leather\",\n   'Pid': '127.2.DFF8DD86A0648144.48B8C3DED51D2961.889004130575',\n   'Price': '140.0',\n   'Size': '8.5W',\n   'similarity': 0.286385985},\n  {'Brand': 'Kenneth Cole Reaction',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Take your sneaker game to new heights in the Kenneth Cole Reaction Fiona. You stay comfortable all day while a shimmery glitter and metallic upper puts some sparkle in your step.',\n   'Gender': 'female',\n   'Name': \"Kenneth Cole Reaction Women's Fiona Wedge Sneakers - Black\",\n   'Pid': '127.2.DFF8DD86A0648144.8FC0D363E14E9A65.196350233332',\n   'Price': '99.0',\n   'Size': '7',\n   'similarity': 0.28478045},\n  {'Brand': 'Dv Dolce Vita',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black',\n   'Description': 'Grounded with equestrian-inspired details, the Dv Dolce Vita blends a sensational silhouette with sensible style in the Elyse over-the-knee boots.',\n   'Gender': 'female',\n   'Name': \"Dv Dolce Vita Women's Elyse Over-The-Knee Buckle Block Heel Boot - Black\",\n   'Pid': '160244.2.C6DCFA4883B330A3.960B0E6BD93490E0.195857973659',\n   'Price': '147.01',\n   'Size': '6M',\n   'similarity': 0.28478045},\n  {'Brand': 'Vince Camuto',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Leather',\n   'Description': 'A gorgeous addition to tailored skirts, the Vince Camuto Brigitte wide-calf boots dress up or down with sophisticated flair.',\n   'Gender': 'female',\n   'Name': \"Vince Camuto Women's Brigitte Wide-Calf Dress Boots - Black Leather\",\n   'Pid': '160244.2.C6DCFA4883B330A3.FDF01399EA4DDB17.197651398348',\n   'Price': '212.94',\n   'Size': '8M',\n   'similarity': 0.28478045},\n  {'Brand': 'I.n.c. International Concepts',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Patent',\n   'Description': 'Triple-strapped and zipped in back, the Valan flats deliver an on-the-level fresh look from I.n.c. International Concepts.',\n   'Gender': 'female',\n   'Name': \"I.n.c. International Concepts Valan Triple-Strapped Flats, Created for Macy's - Black Patent\",\n   'Pid': '127.2.DFF8DD86A0648144.6CCA4EE520DF126A.194145738130',\n   'Price': '79.5',\n   'Size': '5M',\n   'similarity': 0.28180725},\n  {'Brand': 'Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Faux Leather',\n   'Description': \"From our Weather Ready collection // Take on the rain in a returning favorite. Water-repellent boots never looked so good. Water-repellent ankle bootie with strappy details and a lug sole. Works in: Light rain. Synthetic water-repellent upper with a closed round toe. Side zip closure. Contour+ Comfort technology for a premium fit and all-day comfort experience. Breathable lining: Well-ventilated for natural comfort. Rubber traction outsole to help with slip resistance. 0.75-inch platform, 3-inch block heel. 3.94-inch boot height; 9.80-inch circumference. Note: Measurements based on size 6M boot. For each half size larger, shaft height increases by 0.12 inches, circumference by 0.20 inches. Why You'Ll Love It: From our Weather Ready collection // Water-repellent series. Utility-inspired styles crafted with top-quality materials and luxe linings to help you stay dry and look great, all day every day.\",\n   'Gender': 'female',\n   'Name': 'Naturalizer Madalynn-Strap Water Resistant Lug Sole Booties - Black Faux Leather',\n   'Pid': '127.2.DFF8DD86A0648144.703A9ED3720CDF8D.197943333774',\n   'Price': '169.0',\n   'Size': '6M',\n   'similarity': 0.28113035},\n  {'Brand': 'Kingsize',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Jet black blaze red',\n   'Description': 'Forget about pesky laces. These King. Size No-Tie Sneakers feature elastic laces that fit comfortably over the feet while remaining secure. A memory foam sockliner and padded collar and tongue ensure that every step is supported.  Hook and loop strap. No-tie elastic lace closure',\n   'Gender': 'male',\n   'Name': \"KingSize Men's No-Tie Sneakers - Jet black blaze red\",\n   'Pid': '127.2.DFF8DD86A0648144.2271FB2E8E5037A8.196392405827',\n   'Price': '49.99',\n   'Size': '10WW',\n   'similarity': 0.27951815},\n  {'Brand': 'Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Smooth Faux Leather',\n   'Description': 'Dressed to impress. A platform pump with a slip-on fit, U-shaped vamp and pretty silhouette accentuates every look. Get there beautifully. Classic platform pump with slip-on fit. Manmade upper with an almond toe. Contour+ technology for a premium fit and all-day comfort experience. Non-slip outsole. 3.75\" platform heel. Why You\\'Ll Love It: Ingenious elegant utility. All-day heels that scale the height of chic with endless versatility and comfort that is downright clever. Available in an inclusive size range of tough-to-find sizes and widths for a custom-designed fit and feel for all-day wear. The Shoe With the Beautiful Fit. Since 1927.',\n   'Gender': 'female',\n   'Name': 'Naturalizer Berlin Pumps - Black Smooth Faux Leather',\n   'Pid': '127.2.DFF8DD86A0648144.1977F3E71229197C.17116966236',\n   'Price': '99.0',\n   'Size': '8.5M',\n   'similarity': 0.2724582},\n  {'Brand': '8 by YOOX',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, no appliqués, solid color, leather lining, zipper fastening, pointed toe, cuban heel, rubber sole, contains non-textile parts of animal origin, over-the-knee boots , Color: Black , Size: 5',\n   'Gender': 'female',\n   'Name': '8 By Yoox Leather Over The Knee Western Boot Woman Boot Black Size 5 Calfskin',\n   'Pid': '159390.1.5EDD.32ACB85E3C2EAB0F.US-17716155LW-3-AI24',\n   'Price': '400.0',\n   'Size': '5',\n   'similarity': 0.13249962}],\n 'session_id': '0d851cdc-ce62-4ec7-81ac-3839fb6a10c9'}\n\n\n\nresults_image[\"reasoning\"]\n\n'No API key available, no LLM reordering performed'\n\n\nIn this case, since the API KEYS were removed from the .env file No LLM reranking was used in this."
  },
  {
    "objectID": "notebook/example/example_notebook.html#changing-the-weights-of-the-hybrid-retieval",
    "href": "notebook/example/example_notebook.html#changing-the-weights-of-the-hybrid-retieval",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Changing the weights of the Hybrid Retieval",
    "text": "Changing the weights of the Hybrid Retieval\nIf we look at the line 311 and 314and 308 of src/backend/api.py we can see how weight is assigned to the different types of retrieval, The weighting of different retrieval types is configured within the system. You can modify these weights to fine-tune the hybrid search performance.\nTo adjust the retrieval weights:\n\nRemeber that the summation of the weights has to add up to one (1).\n\n\n1. Text only Search\nThe default in the “text-only” search is [0.5, 0, 0.5] This distribution allocates 0.5 to the fusion embeddings (representing a combined score), 0 to CLIP (as it’s not a CLIP-only search), and 0.5 to TF-IDF.\nTo increase the emphasis on TF-IDF in a text-only search (e.g., to 0.9) while reducing the weight of fusion embeddings (e.g., to 0.1), navigate to the config/db.py and and modify the SEARCH_WEIGHTS dictionary as follows:\nSEARCH_WEIGHTS = {\n    \"text_only\": [0.1, 0, 0.9],\n    \"image_only\": [0, 1, 0],\n    \"hybrid\": [0.5, 0, 0.5],\n\n}\nAfter making these adjustments in config/db.py, you must restart the backend API for the new weights to take effect. Stop the currently running backend process (e.g., by pressing Ctrl+C in your terminal) and then execute the launch command againpython src/backend/api.py\n\n\n1. Hybrid Search\nThis follows the same logic but in this case you will be modifying the hybrid key in the dictionary.i.e\nSEARCH_WEIGHTS = {\n    \"text_only\": [0.5, 0, 0.5],\n    \"image_only\": [0, 1, 0],\n    \"hybrid\": [0.7, 0, 0.3],\n\n}"
  },
  {
    "objectID": "notebook/example/example_notebook.html#text-serch-after-a-different-weight-distribution-0.10-0.9",
    "href": "notebook/example/example_notebook.html#text-serch-after-a-different-weight-distribution-0.10-0.9",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Text serch after a different weight distribution [0.1,0, 0.9]",
    "text": "Text serch after a different weight distribution [0.1,0, 0.9]\n\ntext_query = \"leather shoes\"\n\nresults = api_client.search_text(text_query, search_type=\"text\")\n\n\nresults\n\n{'average_price': 348.87,\n 'brand_distribution': {'8 by YOOX': 6,\n  'BARRACUDA': 6,\n  'Bella Vita': 6,\n  'Clarks': 6,\n  \"DOUCAL'S\": 6,\n  'Dockers': 6,\n  'HOGAN': 6,\n  'Naturalizer': 18,\n  'Pazstor': 6,\n  'SAINT LAURENT': 6,\n  'SANTONI': 6,\n  'STELE': 6,\n  'Soul Naturalizer': 6,\n  \"TOD'S\": 6,\n  'Vince Camuto': 6},\n 'category_distribution': {'Apparel & Accessories &gt;Shoes ': 100},\n 'elapsed_time_sec': 2.524,\n 'price_range': [80.0, 825.0],\n 'reasoning': \"The reordering is based on the following factors: \\n  1. Direct keyword match: Results with 'leather' in the name are ranked higher.\\n  2. Brand Name mentions: Results from well-known brands like Clarks, Vince Camuto, and Naturalizer are given priority.\\n  3. Semantic similarity to the query intent: Results that closely match the search query 'leather shoes' are ranked higher.\\n  4. Price comparison: Lower-priced items are given some weight in the ranking.\",\n 'results': [{'Brand': 'Clarks',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Leather',\n   'Description': 'Bringing the best of boots to your most-loved looks, our Lileigh Charm leather ankle boot combines a premium feel with timeless design details. Grounded atop an ultra-wearable stack heel, it comes together with super-soft foam footbeds to deliver all the comfort of your old favorites as soon as you pull them on. Your new wardrobe staple.',\n   'Gender': 'female',\n   'Name': \"Clarks Women's Collection Lileigh Charm Boots - Black Leather\",\n   'Pid': '127.2.DFF8DD86A0648144.48B8C3DED51D2961.889004130575',\n   'Price': '140.0',\n   'Size': '8.5W',\n   'similarity': 0.9},\n  {'Brand': 'Bella Vita',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Champagne Leather',\n   'Description': \"Let's take sophistication to new heights with the Malani by Bella Vita. This chic style features a contemporary mesh and leather pointed toe, an on-trend kitten heel, and a stylish ankle strap, creating a beautiful silhouette. The heel to toe padded insole provides comfort, while the back zipper closure makes it easy to slip on and off. With an adjustable buckle for a customizable fit, this dress style has everything you need to step out in confidence.\",\n   'Gender': 'female',\n   'Name': \"Bella Vita Women's Malani Kitten Heel Pumps - Champagne Leather\",\n   'Pid': '127.2.DFF8DD86A0648144.1BE43FBEFB2346F4.196371734047',\n   'Price': '120.0',\n   'Size': '9.5WW',\n   'similarity': 0.89072235},\n  {'Brand': 'Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Faux Leather',\n   'Description': \"From our Weather Ready collection // Take on the rain in a returning favorite. Water-repellent boots never looked so good. Water-repellent ankle bootie with strappy details and a lug sole. Works in: Light rain. Synthetic water-repellent upper with a closed round toe. Side zip closure. Contour+ Comfort technology for a premium fit and all-day comfort experience. Breathable lining: Well-ventilated for natural comfort. Rubber traction outsole to help with slip resistance. 0.75-inch platform, 3-inch block heel. 3.94-inch boot height; 9.80-inch circumference. Note: Measurements based on size 6M boot. For each half size larger, shaft height increases by 0.12 inches, circumference by 0.20 inches. Why You'Ll Love It: From our Weather Ready collection // Water-repellent series. Utility-inspired styles crafted with top-quality materials and luxe linings to help you stay dry and look great, all day every day.\",\n   'Gender': 'female',\n   'Name': 'Naturalizer Madalynn-Strap Water Resistant Lug Sole Booties - Black Faux Leather',\n   'Pid': '127.2.DFF8DD86A0648144.703A9ED3720CDF8D.197943333774',\n   'Price': '169.0',\n   'Size': '6M',\n   'similarity': 0.89072235},\n  {'Brand': 'Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Pewter Faux Leather',\n   'Description': \"From our Lite Series // An everyday essential. You simply can't go wrong adding this lug sole loafer to your shoe closet. Bold women's loafers with soft, lightweight lug sole. Synthetic upper with a closed round toe. Contour+ Comfort technology for a premium fit and all-day comfort experience. Flexible and lightweight Eva sole. 0.75-inch platform, 2.25-inch block heel. Linings, insole, insole board, toe box and heel counter. You'Ll Love It: Forever elegant silhouettes with all day wearability, available in an inclusive range of sizes and widths. Designed to the contours of a woman's foot. The Beautiful Fit. Since 1927.\",\n   'Gender': 'female',\n   'Name': 'Naturalizer Dakota Lug Sole Penny Loafers - Pewter Faux Leather',\n   'Pid': '127.2.DFF8DD86A0648144.6D6F2F74915259BC.197943265662',\n   'Price': '130.0',\n   'Size': '6.5M',\n   'similarity': 0.89072235},\n  {'Brand': 'Vince Camuto',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Leather',\n   'Description': 'A gorgeous addition to tailored skirts, the Vince Camuto Brigitte wide-calf boots dress up or down with sophisticated flair.',\n   'Gender': 'female',\n   'Name': \"Vince Camuto Women's Brigitte Wide-Calf Dress Boots - Black Leather\",\n   'Pid': '160244.2.C6DCFA4883B330A3.FDF01399EA4DDB17.197651398348',\n   'Price': '212.94',\n   'Size': '8M',\n   'similarity': 0.89072235},\n  {'Brand': 'Soul Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'White Faux Leather',\n   'Description': \"From Soul Naturalizer // Up your style game. This lace-up sneaker came to play. All-day sneakers with wedge sole. Synthetic upper with a closed almond toe. ContourFIT technology: sculpted insole, soft foam lining, arch support with memory foam, sock lining, lightweight and flexible outsole. 0.5-inch platform, 1.5-inch heel. Why You'Ll Love IT: Forever elegant silhouettes with all day wearability, available in an inclusive range of sizes and widths. Designed to the contours of a woman's foot. The Beautiful Fit. Since 1927.\",\n   'Gender': 'female',\n   'Name': 'Soul Naturalizer Jackson Lace-Up Wedge Sneakers - Black/White Faux Leather',\n   'Pid': '160244.2.C6DCFA4883B330A3.CE3A18B9819E6564.197943842887',\n   'Price': '103.87',\n   'Size': '9M',\n   'similarity': 0.874263294},\n  {'Brand': 'Naturalizer',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Black Smooth Faux Leather',\n   'Description': 'Dressed to impress. A platform pump with a slip-on fit, U-shaped vamp and pretty silhouette accentuates every look. Get there beautifully. Classic platform pump with slip-on fit. Manmade upper with an almond toe. Contour+ technology for a premium fit and all-day comfort experience. Non-slip outsole. 3.75\" platform heel. Why You\\'Ll Love It: Ingenious elegant utility. All-day heels that scale the height of chic with endless versatility and comfort that is downright clever. Available in an inclusive size range of tough-to-find sizes and widths for a custom-designed fit and feel for all-day wear. The Shoe With the Beautiful Fit. Since 1927.',\n   'Gender': 'female',\n   'Name': 'Naturalizer Berlin Pumps - Black Smooth Faux Leather',\n   'Pid': '127.2.DFF8DD86A0648144.1977F3E71229197C.17116966236',\n   'Price': '99.0',\n   'Size': '8.5M',\n   'similarity': 0.874263294},\n  {'Brand': \"TOD'S\",\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, suede effect, buckle, brand logo, solid color, leather lining, zipper fastening, round toe, square heel, pebbled sole, contains non-textile parts of animal origin, suede ankle boots , Color: Cocoa , Size: 5.5',\n   'Gender': 'female',\n   'Name': \"Tod's Woman Ankle boots Cocoa Size 5.5 Leather\",\n   'Pid': '159390.1.5EDD.7BBA18A7420043AA.US-17281540JK-4-AI24',\n   'Price': '825.0',\n   'Size': '5.5',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'SANTONI',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'suede, no appliqués, solid color, square toe, square heel, contains non-textile parts of animal origin, large sized, sandals , Color: Green , Size: 8',\n   'Gender': 'female',\n   'Name': 'Santoni Woman Sandals Green Size 8 Leather',\n   'Pid': '159390.1.5EDD.4CAF4E9AEF252405.US-17531419UQ-9-AI24',\n   'Price': '795.0',\n   'Size': '8',\n   'similarity': 0.47302655400000004},\n  {'Brand': \"DOUCAL'S\",\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'glossed-leather, fringes, buckle, solid color, leather lining, round toe, square heel, lug sole, contains non-textile parts of animal origin, loafers , Color: Dark brown , Size: 9.5',\n   'Gender': 'female',\n   'Name': \"Doucal's Woman Loafers Dark brown Size 9.5 Leather\",\n   'Pid': '159390.1.5EDD.FAA85A244D75A603.US-17865112NW-12-AI24',\n   'Price': '583.0',\n   'Size': '9.5',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'SAINT LAURENT',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, brand logo, solid color, fabric inner, laces, round toeline, flat, rubber sole, contains non-textile parts of animal origin, high-tops & trainers, small sized , Color: White , Size: 9',\n   'Gender': 'male',\n   'Name': 'Saint Laurent Man Sneakers White Size 9 Soft Leather',\n   'Pid': '159390.1.5EDD.24A9ACFFC4796BF7.US-17713413FB-9-AI24',\n   'Price': '667.0',\n   'Size': '9',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'BARRACUDA',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, no appliqués, solid color, leather lining, elasticized gores, round toeline, square heel, lug sole, contains non-textile parts of animal origin , Color: White , Size: 8',\n   'Gender': 'female',\n   'Name': 'Barracuda Woman Ankle boots White Size 8 Soft Leather',\n   'Pid': '159390.1.5EDD.6EDF6DB0919D5BEA.US-17200074AG-9-AI24',\n   'Price': '564.0',\n   'Size': '8',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'STELE',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, nappa leather, no appliqués, solid color, leather backing, narrow toeline, spike heel, covered heel, leather sole, contains non-textile parts of animal origin, stilettos , Color: Garnet , Size: 6',\n   'Gender': 'female',\n   'Name': 'Stele Woman Pumps Garnet Size 6 Soft Leather',\n   'Pid': '159390.1.5EDD.FB6CDCD4695A6FE6.US-17397829VA-5-AI24',\n   'Price': '408.0',\n   'Size': '6',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'HOGAN',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, brand logo, multicolor pattern, leather backing, laces, round toeline, flat, rubber cleated sole, contains non-textile parts of animal origin, large sized , Color: Dark brown , Size: 7',\n   'Gender': 'male',\n   'Name': 'Hogan Man Sneakers Dark brown Size 7 Soft Leather',\n   'Pid': '159390.1.5EDD.DB8589969328F3A2.US-17246234QT-5-AI24',\n   'Price': '525.0',\n   'Size': '7',\n   'similarity': 0.47302655400000004},\n  {'Brand': 'Dockers',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Dark Tan',\n   'Description': \"Cool enough for casual adventures and polished enough for the office, these bike toe oxford men's dress shoes from Dockers effortlessly complement your everyday routine.\",\n   'Gender': 'male',\n   'Name': \"Dockers Men's Trustee Leather Oxfords - Dark Tan\",\n   'Pid': '127.2.DFF8DD86A0648144.EEF67CB2003482F3.31042444668',\n   'Price': '80.0',\n   'Size': '10W',\n   'similarity': 0.414425862},\n  {'Brand': 'Pazstor',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'Barista brown',\n   'Description': 'These oxfords are designed to fit ergonomically offering premium Comfort, Made of Premium soft lambskin Leather. Whole size only, please choose one number above if you usually wear half number (e.g. if your size is 7.5 then go up to 8) Made in Mexico',\n   'Gender': 'male',\n   'Name': \"Pazstor Men's Premium Comfort Lambskin Leather Oxfords Classic - Barista brown\",\n   'Pid': '127.2.DFF8DD86A0648144.935C81483CAB9DD1.810122210719',\n   'Price': '109.0',\n   'Size': '12',\n   'similarity': 0.36997136999999997},\n  {'Brand': '8 by YOOX',\n   'Category': 'Apparel & Accessories &gt;Shoes ',\n   'Color': 'None',\n   'Description': 'leather, no appliqués, solid color, leather lining, zipper fastening, pointed toe, cuban heel, rubber sole, contains non-textile parts of animal origin, over-the-knee boots , Color: Black , Size: 5',\n   'Gender': 'female',\n   'Name': '8 By Yoox Leather Over The Knee Western Boot Woman Boot Black Size 5 Calfskin',\n   'Pid': '159390.1.5EDD.32ACB85E3C2EAB0F.US-17716155LW-3-AI24',\n   'Price': '400.0',\n   'Size': '5',\n   'similarity': 0.055179837}],\n 'session_id': 'b293e3f0-ac7e-4756-9d65-4ac672b075c7'}\n\n\nThe result here looks different from the first seach even though it is the same query"
  },
  {
    "objectID": "notebook/example/example_notebook.html#clean-up",
    "href": "notebook/example/example_notebook.html#clean-up",
    "title": "FinlyWealth Search Engine API Usage Demo",
    "section": "Clean Up",
    "text": "Clean Up\n\nStop the backend on the terminal by Ctrl + C on your keyboard\nBring down the running containers by running docker compose -f docker-compose.db.yml down --remove-orphans --volumes"
  },
  {
    "objectID": "notebook/eda/eda_frequent_words.html",
    "href": "notebook/eda/eda_frequent_words.html",
    "title": "",
    "section": "",
    "text": "import os\nimport time\n\nimport pandas as pd\nimport pyarrow as pa\nimport pyarrow.parquet as pq\nimport nltk\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport re\nfrom nltk.corpus import stopwords\n\nWe aim to identify the minimum and maximum lengths of product names and descriptions, as well as explore the top 50 most frequent words in both columns. To begin, we will load the filtered dataset, which excludes products from non-English-language markets.\n\nstart = time.time()\ndf = pd.read_parquet(\"../../data/clean/clean_data.parquet\", engine=\"pyarrow\", columns=[\"Pid\", \"Description\", \"Name\"])\nprint(\"Load time: {:.2f} seconds\".format(time.time() - start))\n\nLoad time: 220.40 seconds\n\n\n\nCheck the maximum and minimum length of product descriptions\n\nmax_description_length = df['Description'].dropna().str.len().max()\nmin_description_length = df['Description'].dropna().str.len().min()\nprint(\"The maximum description length is: \", max_description_length)\nprint(\"The minimum description length is: \", min_description_length)\n\nThe maximum description length is:  6098\nThe minimum description length is:  1\n\n\n\n\nCheck the maximum and minimum length of product names\n\nmax_name_length = df['Name'].dropna().str.len().max()\nmin_name_length = df['Name'].dropna().str.len().min()\nprint(\"The maximum name length is: \", max_name_length)\nprint(\"The minimum name length is: \", min_name_length)\n\nThe maximum name length is:  205\nThe minimum name length is:  1\n\n\n\n\nCheck the top 50 most frequent words in the product names and descriptions\n\ndef clean_text(text):\n    text = str(text).lower()  # Convert to lowercase\n    text = re.sub(r'[^a-z\\s]', '', text)  # Remove non-alphabetical characters\n    return text\n\n# Apply cleaning function to 'Name' and 'Description'\ndf['Name_clean'] = df['Name'].apply(clean_text)\ndf['Description_clean'] = df['Description'].apply(clean_text)\n\n\n# Function to get top n-grams\ndef get_top_ngrams(corpus, ngram_range=(1, 1), top_k=20):\n    vectorizer = CountVectorizer(ngram_range=ngram_range, stop_words='english')\n    X = vectorizer.fit_transform(corpus)\n    sum_words = X.sum(axis=0)\n    words_freq = [(word, sum_words[0, idx]) for word, idx in vectorizer.vocabulary_.items()]\n    words_freq = sorted(words_freq, key=lambda x: x[1], reverse=True)\n    return words_freq[:top_k]\n\n# Plot word cloud\ndef plot_wordcloud(ngrams_freq, title):\n    wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(dict(ngrams_freq))\n    plt.figure(figsize=(10, 5))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.title(title, fontsize=16)\n    plt.show()\n\n\n# Analyze Name column\nn = 50\nname_ngrams = get_top_ngrams(df[\"Name_clean\"], top_k = n)\nprint(f\"The top {n} most frequent words in product name are: \", name_ngrams)\nplot_wordcloud(name_ngrams, f\"Top {n} most frequent words in Product Name\")\n\nThe top 50 most frequent words in product name are:  [('size', np.int64(1422890)), ('womens', np.int64(1374478)), ('black', np.int64(1116106)), ('mens', np.int64(1062010)), ('blue', np.int64(609466)), ('woman', np.int64(527582)), ('cotton', np.int64(511787)), ('temu', np.int64(479243)), ('white', np.int64(466946)), ('tshirt', np.int64(384390)), ('leather', np.int64(377140)), ('dress', np.int64(367048)), ('man', np.int64(340307)), ('edition', np.int64(335097)), ('pants', np.int64(308583)), ('light', np.int64(298907)), ('sleeve', np.int64(284153)), ('set', np.int64(252700)), ('new', np.int64(240685)), ('book', np.int64(226954)), ('gold', np.int64(219845)), ('navy', np.int64(217004)), ('elastane', np.int64(216524)), ('red', np.int64(211633)), ('green', np.int64(210881)), ('jeans', np.int64(207582)), ('shirt', np.int64(204239)), ('polyester', np.int64(199407)), ('block', np.int64(198705)), ('guide', np.int64(191997)), ('macys', np.int64(190718)), ('grey', np.int64(186358)), ('brown', np.int64(184384)), ('long', np.int64(178362)), ('end', np.int64(170109)), ('boots', np.int64(164917)), ('created', np.int64(164413)), ('sandals', np.int64(164353)), ('art', np.int64(162555)), ('available', np.int64(161117)), ('fit', np.int64(161034)), ('jacket', np.int64(160326)), ('short', np.int64(159506)), ('silver', np.int64(155703)), ('sunglasses', np.int64(155500)), ('lands', np.int64(155351)), ('sneakers', np.int64(154924)), ('sweater', np.int64(153774)), ('soft', np.int64(150358)), ('plus', np.int64(149897))]\n\n\n\n\n\n\n\n\n\n\n# Analyze Description column\ndesc_ngrams = get_top_ngrams(df[\"Description_clean\"], top_k = n)\nprint(f\"The top {n} most frequent words in product description are: \", desc_ngrams)\nplot_wordcloud(desc_ngrams, f\"Top {n} most frequent words in Product Description\")\n\nThe top 50 most frequent words in product description are:  [('book', np.int64(2611938)), ('new', np.int64(2214532)), ('color', np.int64(1942544)), ('size', np.int64(1610374)), ('perfect', np.int64(1281294)), ('condition', np.int64(1163154)), ('style', np.int64(1079744)), ('comfort', np.int64(1015994)), ('fit', np.int64(1008145)), ('life', np.int64(1007781)), ('world', np.int64(847360)), ('features', np.int64(847250)), ('wear', np.int64(845759)), ('look', np.int64(829948)), ('leather', np.int64(827391)), ('collection', np.int64(810492)), ('way', np.int64(808006)), ('design', np.int64(796201)), ('classic', np.int64(760775)), ('solid', np.int64(727720)), ('pages', np.int64(720195)), ('fabric', np.int64(709580)), ('long', np.int64(705084)), ('work', np.int64(702714)), ('time', np.int64(690371)), ('better', np.int64(689978)), ('day', np.int64(679374)), ('logo', np.int64(650608)), ('designed', np.int64(631882)), ('make', np.int64(622795)), ('service', np.int64(622636)), ('history', np.int64(619193)), ('love', np.int64(605760)), ('just', np.int64(599608)), ('great', np.int64(595963)), ('pockets', np.int64(593372)), ('dry', np.int64(588518)), ('soft', np.int64(587918)), ('available', np.int64(587132)), ('good', np.int64(583183)), ('shipping', np.int64(579069)), ('brand', np.int64(564281)), ('like', np.int64(562062)), ('black', np.int64(554823)), ('edition', np.int64(550245)), ('years', np.int64(549389)), ('help', np.int64(541590)), ('comfortable', np.int64(535234)), ('easy', np.int64(533261)), ('sleeves', np.int64(523448))]"
  },
  {
    "objectID": "references/vector_database_comparison.html",
    "href": "references/vector_database_comparison.html",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "This analysis compares leading vector databases (Pinecone, Weaviate, ChromaDB, and pgvector) specifically for product search implementations with 10M+ products. The comparison focuses on scalability, performance, features, and cost-effectiveness for production deployments.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature\nPinecone\nWeaviate\nChromaDB\npgvector\n\n\n\n\nDeployment Options\nCloud-only\nSelf-hosted & Cloud\nSelf-hosted & Cloud\nSelf-hosted\n\n\nMaximum Scale\nUnlimited\nLimited by hardware\nLimited by hardware\nLimited by hardware\n\n\nQuery Speed (1M vectors)\n~10-50ms\n~50-100ms\n~100-200ms\n~200-500ms\n\n\nEnterprise Features\nYes\nYes\nLimited\nLimited\n\n\nPricing Model\nPay-per-use\nSelf-hosted or pay-per-use\nOpen Source\nOpen Source\n\n\nProduction Readiness\nHigh\nHigh\nMedium\nMedium\n\n\n\n\n\n\n\n\n\n\n\nPurpose-built for production workloads. Scalability is Pinecone’s middle name\nExcellent scalability (handles billions of vectors)\nConsistent low-latency queries (~10-50ms)\nAutomatic sharding and replication\nManaged service with 99.9% uptime SLA\nACID compliance\nReal-time updates\n\n\n\n\n\nHigher cost for large datasets\nCloud-only (no self-hosting option)\nLimited customization options\nVendor lock-in concerns\n\n\n\n\n\n\n\n\nFlexible deployment options (self-hosted or cloud)\nStrong schema support\nGraphQL API\nGood performance at scale\nMulti-modal search capabilities\nActive community and development\nBuilt-in backup and restore\n\n\n\n\n\nMore complex setup than Pinecone\nRequires more hands-on management\nPerformance can vary based on hardware\nHigher operational overhead\n\n\n\n\n\n\n\n\nOpen-source\nEasy to set up and use\nGood for development and testing\nSupports multiple embedding types\nBilingual i.e Python and JavaScript\nFree to use\nSimple API. The API magic you conjure in your Python notebook is the same wizardry that scales up in a production cluster\n\n\n\n\n\nLimited production features\nLess optimized for large-scale deployments\nHigher latency at scale\nLimited enterprise support\nYounger project with less proven reliability\n\n\n\n\n\n\n\n\nPostgreSQL integration\nFamiliar SQL interface\nACID compliance\nCost-effective\nBenefits from PostgreSQL ecosystem\nGood for smaller datasets\nTransaction support\n\n\n\n\n\nLower performance at scale\nLimited vector search optimizations\nRequires manual optimization\nNo managed service option\nHigher maintenance overhead\n\n\n\n\n\n\n\n\n\nPinecone: Maintains consistent performance (~50ms) even at scale\nWeaviate: Good performance (~100ms) with proper hardware\nChromaDB: Performance degrades with scale (~200-300ms)\npgvector: Significant slowdown at scale (~500ms+)\n\n\n\n\n\nPinecone: ~1M vectors/hour\nWeaviate: ~800K vectors/hour\nChromaDB: ~500K vectors/hour\npgvector: ~300K vectors/hour\n\n\n\n\n\n\n\n\nStorage: $2,000-3,000\nQueries: Pay per query\nManaged service included\n\n\n\n\n\nSelf-hosted: $500-1,000 (infrastructure)\nCloud: Similar to Pinecone\nAdditional operational costs\n\n\n\n\n\nSelf-hosted: $300-800 (infrastructure)\nOpen source (free license)\nOperational costs\n\n\n\n\n\nSelf-hosted: $200-500 (infrastructure)\nOpen source (free license)\nLower infrastructure requirements\n\n\n\n\n\nFor a production system handling 10M+ products, Pinecone is the recommended choice for the following reasons:\n\nScalability: Best-in-class performance at scale without manual optimization\nReliability: Production-ready with enterprise-grade features\nMaintenance: Fully managed service reduces operational overhead\nConsistency: Predictable performance regardless of data size\nSupport: Enterprise-grade support and documentation\n\nWhile the cost is higher than self-hosted solutions, the total cost of ownership (TCO) is often lower when considering:\n\nReduced engineering time for maintenance\nHigher reliability and uptime\nAutomatic scaling and optimization\nBuilt-in redundancy and backup\nNo need for dedicated DevOps resources\n\n\n\nVector databases handle critical operations in AI systems—from similarity searches to data retrieval for large language models. The choice of database infrastructure affects several aspects:\n\nQuery performance and accuracy\nOperational complexity and maintenance\nCost scaling with data growth\nTeam resource allocation\n\n\n\n\n\n\n\n\n\nFeature\nPinecone\nPostgreSQL + pgvector + pgvectorscale\n\n\n\n\nQuery Performance\n- 15.97ms at 90% recall\n- 1,763ms at 99% recall\n- 10.86ms at 90% recall\n- 62.18ms at 99% recall\n\n\nManagement\n- Fully managed\n- Zero infrastructure overhead\n- Self-managed\n- Requires DB expertise\n\n\nCustomization\n- Fixed configurations\n- 90% recall only\nFull control over:- Index parameters, Query optimization, Performance tuning\n\n\nScaling\n- Automatic scaling\n- Fixed performance tiers\n- Manual scaling\n- Performance tuning needed\n\n\nSupport\n- Professional support\n- SLA guarantees\n- Community support\n- Extensive documentation\n\n\nBest For\nTeams needing:\n- Zero DB management\n- Quick deployment ,Fixed workloads\nTeams with DB expertise\n- Custom requirements\n\n\n\n\n\n\nIf budget constraints are significant or self-hosting is a requirement, Weaviate provides a good balance of features and scalability, though it requires more operational overhead.\n\n\n\n\nFor large-scale product search with 10M+ products, Pinecone offers the best combination of performance, reliability, and ease of use. While it has a higher direct cost, the reduced operational overhead and guaranteed performance make it the most cost-effective solution when considering total cost of ownership. For organizations with strong technical teams and a preference for self-hosted solutions, Weaviate provides a viable alternative."
  },
  {
    "objectID": "references/vector_database_comparison.html#overview",
    "href": "references/vector_database_comparison.html#overview",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "This analysis compares leading vector databases (Pinecone, Weaviate, ChromaDB, and pgvector) specifically for product search implementations with 10M+ products. The comparison focuses on scalability, performance, features, and cost-effectiveness for production deployments."
  },
  {
    "objectID": "references/vector_database_comparison.html#quick-comparison-table",
    "href": "references/vector_database_comparison.html#quick-comparison-table",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "Feature\nPinecone\nWeaviate\nChromaDB\npgvector\n\n\n\n\nDeployment Options\nCloud-only\nSelf-hosted & Cloud\nSelf-hosted & Cloud\nSelf-hosted\n\n\nMaximum Scale\nUnlimited\nLimited by hardware\nLimited by hardware\nLimited by hardware\n\n\nQuery Speed (1M vectors)\n~10-50ms\n~50-100ms\n~100-200ms\n~200-500ms\n\n\nEnterprise Features\nYes\nYes\nLimited\nLimited\n\n\nPricing Model\nPay-per-use\nSelf-hosted or pay-per-use\nOpen Source\nOpen Source\n\n\nProduction Readiness\nHigh\nHigh\nMedium\nMedium"
  },
  {
    "objectID": "references/vector_database_comparison.html#detailed-analysis",
    "href": "references/vector_database_comparison.html#detailed-analysis",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "Purpose-built for production workloads. Scalability is Pinecone’s middle name\nExcellent scalability (handles billions of vectors)\nConsistent low-latency queries (~10-50ms)\nAutomatic sharding and replication\nManaged service with 99.9% uptime SLA\nACID compliance\nReal-time updates\n\n\n\n\n\nHigher cost for large datasets\nCloud-only (no self-hosting option)\nLimited customization options\nVendor lock-in concerns\n\n\n\n\n\n\n\n\nFlexible deployment options (self-hosted or cloud)\nStrong schema support\nGraphQL API\nGood performance at scale\nMulti-modal search capabilities\nActive community and development\nBuilt-in backup and restore\n\n\n\n\n\nMore complex setup than Pinecone\nRequires more hands-on management\nPerformance can vary based on hardware\nHigher operational overhead\n\n\n\n\n\n\n\n\nOpen-source\nEasy to set up and use\nGood for development and testing\nSupports multiple embedding types\nBilingual i.e Python and JavaScript\nFree to use\nSimple API. The API magic you conjure in your Python notebook is the same wizardry that scales up in a production cluster\n\n\n\n\n\nLimited production features\nLess optimized for large-scale deployments\nHigher latency at scale\nLimited enterprise support\nYounger project with less proven reliability\n\n\n\n\n\n\n\n\nPostgreSQL integration\nFamiliar SQL interface\nACID compliance\nCost-effective\nBenefits from PostgreSQL ecosystem\nGood for smaller datasets\nTransaction support\n\n\n\n\n\nLower performance at scale\nLimited vector search optimizations\nRequires manual optimization\nNo managed service option\nHigher maintenance overhead"
  },
  {
    "objectID": "references/vector_database_comparison.html#performance-analysis",
    "href": "references/vector_database_comparison.html#performance-analysis",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "Pinecone: Maintains consistent performance (~50ms) even at scale\nWeaviate: Good performance (~100ms) with proper hardware\nChromaDB: Performance degrades with scale (~200-300ms)\npgvector: Significant slowdown at scale (~500ms+)\n\n\n\n\n\nPinecone: ~1M vectors/hour\nWeaviate: ~800K vectors/hour\nChromaDB: ~500K vectors/hour\npgvector: ~300K vectors/hour"
  },
  {
    "objectID": "references/vector_database_comparison.html#cost-analysis-monthly-10m-products",
    "href": "references/vector_database_comparison.html#cost-analysis-monthly-10m-products",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "Storage: $2,000-3,000\nQueries: Pay per query\nManaged service included\n\n\n\n\n\nSelf-hosted: $500-1,000 (infrastructure)\nCloud: Similar to Pinecone\nAdditional operational costs\n\n\n\n\n\nSelf-hosted: $300-800 (infrastructure)\nOpen source (free license)\nOperational costs\n\n\n\n\n\nSelf-hosted: $200-500 (infrastructure)\nOpen source (free license)\nLower infrastructure requirements"
  },
  {
    "objectID": "references/vector_database_comparison.html#recommendation",
    "href": "references/vector_database_comparison.html#recommendation",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "For a production system handling 10M+ products, Pinecone is the recommended choice for the following reasons:\n\nScalability: Best-in-class performance at scale without manual optimization\nReliability: Production-ready with enterprise-grade features\nMaintenance: Fully managed service reduces operational overhead\nConsistency: Predictable performance regardless of data size\nSupport: Enterprise-grade support and documentation\n\nWhile the cost is higher than self-hosted solutions, the total cost of ownership (TCO) is often lower when considering:\n\nReduced engineering time for maintenance\nHigher reliability and uptime\nAutomatic scaling and optimization\nBuilt-in redundancy and backup\nNo need for dedicated DevOps resources\n\n\n\nVector databases handle critical operations in AI systems—from similarity searches to data retrieval for large language models. The choice of database infrastructure affects several aspects:\n\nQuery performance and accuracy\nOperational complexity and maintenance\nCost scaling with data growth\nTeam resource allocation\n\n\n\n\n\n\n\n\n\nFeature\nPinecone\nPostgreSQL + pgvector + pgvectorscale\n\n\n\n\nQuery Performance\n- 15.97ms at 90% recall\n- 1,763ms at 99% recall\n- 10.86ms at 90% recall\n- 62.18ms at 99% recall\n\n\nManagement\n- Fully managed\n- Zero infrastructure overhead\n- Self-managed\n- Requires DB expertise\n\n\nCustomization\n- Fixed configurations\n- 90% recall only\nFull control over:- Index parameters, Query optimization, Performance tuning\n\n\nScaling\n- Automatic scaling\n- Fixed performance tiers\n- Manual scaling\n- Performance tuning needed\n\n\nSupport\n- Professional support\n- SLA guarantees\n- Community support\n- Extensive documentation\n\n\nBest For\nTeams needing:\n- Zero DB management\n- Quick deployment ,Fixed workloads\nTeams with DB expertise\n- Custom requirements\n\n\n\n\n\n\nIf budget constraints are significant or self-hosting is a requirement, Weaviate provides a good balance of features and scalability, though it requires more operational overhead."
  },
  {
    "objectID": "references/vector_database_comparison.html#conclusion",
    "href": "references/vector_database_comparison.html#conclusion",
    "title": "Vector Database Comparison for Large-Scale Product Search",
    "section": "",
    "text": "For large-scale product search with 10M+ products, Pinecone offers the best combination of performance, reliability, and ease of use. While it has a higher direct cost, the reduced operational overhead and guaranteed performance make it the most cost-effective solution when considering total cost of ownership. For organizations with strong technical teams and a preference for self-hosted solutions, Weaviate provides a viable alternative."
  },
  {
    "objectID": "report/final/generate_figures.html",
    "href": "report/final/generate_figures.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\ndf = pd.read_csv('../../experiments/results/faiss_hyperparam/faiss_hyperparam.csv')\nfig = px.line(\n    df,\n    x='0_nprobe',\n    y='overall_recall_at_k',\n    color='faiss_nlist',\n    title='Hyperparameter Seach for FAISS Cluster Size',\n    labels={\n        '0_nprobe': 'Clusters to Search',\n        'overall_recall_at_k': 'Recall@20',\n        'faiss_nlist': 'Total Clusters'\n    }\n)\n\n# Update layout for better readability\nfig.update_layout(\n    title=None,\n    xaxis_title='Clusters to Search',\n    yaxis_title='Recall@20',\n    legend_title='Total Clusters',\n    hovermode='x unified',\n    font=dict(size=16),\n    legend=dict(\n        title_font=dict(size=16),\n        font=dict(size=14),\n        itemsizing='constant'\n    ),\n    xaxis=dict(title_font=dict(size=16), tickfont=dict(size=14)),\n    yaxis=dict(title_font=dict(size=16), tickfont=dict(size=14))\n)\n\nfig.update_layout(\n    legend=dict(\n        traceorder='normal',\n        itemsizing='constant'\n    )\n)\n\n# Convert faiss_nlist to numeric for proper sorting\ndf['faiss_nlist'] = pd.to_numeric(df['faiss_nlist'])\nfig.data = sorted(fig.data, key=lambda x: int(x.name))\n\n# Show the plot\nfig.show()\n\nfig.write_image(\n    \"../../img/faiss_hyperparam.png\",\n    scale=2,  # Increase the scale factor for higher resolution\n    width=800,\n    height=500,\n    format='png'\n)\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n# Get precision results\ntext_precision = pd.read_csv('../../experiments/results/precision/tfidf_rating_summary.csv').groupby(by='query_type')['precision'].mean().reset_index()\ntext_basic_precision = round(text_precision.loc[text_precision[\"query_type\"] == \"basic_query\", \"precision\"].values[0],2 )\ntext_natural_precision = round(text_precision.loc[text_precision[\"query_type\"] == \"natural_query\", \"precision\"].values[0],2 )\n\nembed_precision = pd.read_csv('../../experiments/results/precision/fusion_rating_summary.csv').groupby(by='query_type')['precision'].mean().reset_index()\nembed_basic_precision = round(embed_precision.loc[embed_precision[\"query_type\"] == \"basic_query\", \"precision\"].values[0],2 )\nembed_natural_precision = round(embed_precision.loc[embed_precision[\"query_type\"] == \"natural_query\", \"precision\"].values[0],2 )\n\nllm_precision = pd.read_csv('../../experiments/results/precision/llm_rating_summary.csv').groupby(by='query_type')['precision'].mean().reset_index()\nllm_basic_precision = round(llm_precision.loc[llm_precision[\"query_type\"] == \"basic_query\", \"precision\"].values[0],2 )\nllm_natural_precision = round(llm_precision.loc[llm_precision[\"query_type\"] == \"natural_query\", \"precision\"].values[0],2 )\n\n# Get recall results\nrecall = llm_precision = pd.read_csv('../../experiments/results/recall/recall.csv')\ntext_basic_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_20250603_195853\", \"basic_query_recall_at_k\"].values[0],2 )\ntext_natural_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_20250603_195853\", \"natural_query_recall_at_k\"].values[0],2 )\n\nembed_basic_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_fusion_20250603_200022\", \"basic_query_recall_at_k\"].values[0],2 )\nembed_natural_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_fusion_20250603_200022\", \"natural_query_recall_at_k\"].values[0],2 )\n\nllm_basic_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_fusion_gpt3.5_turbo_20250604_163348\", \"basic_query_recall_at_k\"].values[0],2 )\nllm_natural_recall = round(recall.loc[recall[\"Name\"] == \"tfidf_fusion_gpt3.5_turbo_20250604_163348\", \"natural_query_recall_at_k\"].values[0],2 )\n\n# Get search time\nrecall['duration_float'] = recall['Duration'].str.replace('min', '', regex=False).astype(float)\ntext_time = recall.loc[recall[\"Name\"] == \"tfidf_20250603_195853\", \"duration_float\"].values[0] * 60 / 300\nembed_time = recall.loc[recall[\"Name\"] == \"tfidf_fusion_20250603_200022\", \"duration_float\"].values[0] * 60 / 300\nllm_time = recall.loc[recall[\"Name\"] == \"tfidf_fusion_gpt3.5_turbo_20250604_163348\", \"duration_float\"].values[0] * 60 / 300\n\n# Combine data\ndata = {\n    'Method': ['Text Search', 'Text + Embeddings', 'Text + Embeddings + LLM'] * 2,\n    'Query Type': ['Basic Query'] * 3 + ['Natural Query'] * 3,\n    'Recall@20': [text_basic_recall, embed_basic_recall, llm_basic_recall, text_natural_recall, embed_natural_recall, llm_natural_recall],\n    'Precision@20': [text_basic_precision, embed_basic_precision, llm_basic_precision, text_natural_precision, embed_natural_precision, llm_natural_precision],\n    'Search Time (s)': [text_time, embed_time, llm_time, text_time, embed_time, llm_time]\n}\n\ndf = pd.DataFrame(data)\ndf.to_csv('../../experiments/results/summary.csv', index=False)\n\n\n# Color mapping for consistency\ncolor_map = {\n    'Basic Query': '#ef4444',    # Red\n    'Natural Query': '#3b82f6'   # Blue\n}\n\n# Chart 1: Precision@20\nfig_precision = px.bar(\n    df, \n    x='Method', \n    y='Precision@20',\n    color='Query Type',\n    color_discrete_map=color_map,\n    title='Precision@20 Performance Comparison',\n    labels={'Precision@20': 'Precision@20 (%)'},\n    barmode='group'\n)\n\n# Update layout for precision chart\nfig_precision.update_layout(\n    font=dict(size=16),\n    xaxis_title='',\n    yaxis_title_font_size=18,\n    title_font_size=20,\n    legend=dict(\n        orientation=\"v\",\n        yanchor=\"middle\",\n        y=0.5,\n        xanchor=\"left\",\n        x=1.02\n    ),\n    margin=dict(r=150),\n    height=500,\n    width=800\n)\n\nfig_precision.update_xaxes(tickangle=-45)\nfig_precision.show()\n\n# Chart 2: Recall@20\nfig_recall = px.bar(\n    df, \n    x='Method', \n    y='Recall@20',\n    color='Query Type',\n    color_discrete_map=color_map,\n    title='Recall@20 Performance Comparison',\n    labels={'Recall@20': 'Recall@20 (%)'},\n    barmode='group'\n)\n\n# Update layout for recall chart\nfig_recall.update_layout(\n    font=dict(size=16),\n    xaxis_title='',\n    yaxis_title_font_size=18,\n    title_font_size=20,\n    legend=dict(\n        orientation=\"v\",\n        yanchor=\"middle\",\n        y=0.5,\n        xanchor=\"left\",\n        x=1.02\n    ),\n    margin=dict(r=150),\n    height=500,\n    width=800\n)\n\nfig_recall.update_xaxes(tickangle=-45)\nfig_recall.show()\n\n# Chart 3: Search Time (single series)\nsearch_time_data = {\n    'Method': ['Text Search', 'Text + Embeddings', 'Text + Embeddings + LLM'],\n    'Average Search Time': [0.3, 0.6, 4.24]\n}\n\ndf_time = pd.DataFrame(search_time_data)\n\nfig_time = px.bar(\n    df_time, \n    x='Method', \n    y='Average Search Time',\n    title='Average Search Time Comparison',\n    labels={'Average Search Time': 'Time (seconds)'},\n    color_discrete_sequence=['#10b981']  # Green\n)\n\n# Update layout for time chart\nfig_time.update_layout(\n    font=dict(size=16),\n    xaxis_title='',\n    yaxis_title_font_size=18,\n    title_font_size=20,\n    showlegend=False,\n    height=500,\n    width=800\n)\n\nfig_time.update_xaxes(tickangle=-45)\nfig_time.show()\n\n# Export\n# fig_precision.write_image(\"../../img/precision_chart.png\", width=800, height=500)\n# fig_recall.write_image(\"../../img/recall_chart.png\", width=800, height=500)\n# fig_time.write_image(\"../../img/search_time_chart.png\", width=800, height=500)\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json"
  },
  {
    "objectID": "notebook/eda/eda_metadata_columns.html",
    "href": "notebook/eda/eda_metadata_columns.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport time\nIn this notebook, we explore the metadata columns to identify additional information that should be included in the text embeddings. We use the cleaned dataset generated by the src/preprocess/clean_data.py script, which processes the raw data. The cleaned dataset can be downloaded from here.\nstart = time.time()\ndf = pd.read_parquet(\"../../data/clean/clean_data.parquet\", engine=\"pyarrow\", columns=[\"Pid\", \"Category\", \"Name\", \"MergedBrand\", \"Condition\"])\nprint(\"Load time: {:.2f} seconds\".format(time.time() - start))\n\nLoad time: 6.97 seconds"
  },
  {
    "objectID": "notebook/eda/eda_metadata_columns.html#product-name-vs-brand",
    "href": "notebook/eda/eda_metadata_columns.html#product-name-vs-brand",
    "title": "",
    "section": "Product Name vs Brand",
    "text": "Product Name vs Brand\nLet’s start by checking the simple string matching to see if the Name column contains the brand information.\n\ndf['brand_in_name'] = df.apply(\n    lambda row: str(row['MergedBrand']).lower() in str(row['Name']).lower(), axis=1\n)\n\n\n# Total number of rows\ntotal = len(df)\n\n# Count of True values in brand_in_name\ncount = df['brand_in_name'].sum()\n\n# Percentage\npercentage = (count / total) * 100\n\nprint(f\"Count: {count}\")\nprint(f\"Percentage of product names containing the brand: {percentage:.2f}%\")\n\nCount: 5331277\nPercentage of product names containing the brand: 48.35%\n\n\nUsing simple string matching, we found that 48% of product names already contain the brand name. However, not all products have brand information available. As shown below, 44% of the products are missing this detail.\n\nprint(df.isnull().sum() / len(df) * 100)\n\nPid               0.000000\nCategory         37.897004\nName              0.101166\nMergedBrand      44.491586\nCondition        13.894525\nbrand_in_name     0.000000\ndtype: float64\n\n\nNow let’s check among those products whose name don’t contain brand information, how many of them have a missing brand value.\n\n# Total rows where brand_in_name is False\ntotal_false = df[df['brand_in_name'] == False]\n\n# Rows where brand is also NaN\nfalse_and_null = total_false['MergedBrand'].isnull().sum()\n\n# Percentage\npercentage = (false_and_null / len(total_false)) * 100\n\nprint(\"Number of products don't contain brand information in name:\", len(total_false))\nprint(\"Number of products don't contain brand information in name because brand is NaN:\", len(total_false))\nprint(f\"Percentage of missing brand values (NaN) among product names that don't contain the brand: {percentage:.2f}%\")\n\ndf[(df['brand_in_name'] == False) & (~df['MergedBrand'].isnull())]\n\nNumber of products don't contain brand information in name: 5694138\nNumber of products don't contain brand information in name because brand is NaN: 5694138\nPercentage of missing brand values (NaN) among product names that don't contain the brand: 86.15%\n\n\n\n\n\n\n\n\n\nPid\nCategory\nName\nMergedBrand\nCondition\nbrand_in_name\n\n\n\n\n7\n127.2.DFF8DD86A0648144.CC18C6740EDBD90C.812303...\nHome & Garden &gt;Kitchen & Dining &gt;Kitchen Appli...\nNsw - Cult Of The Lamb\nU & I Entertainment\nnew\nFalse\n\n\n39\n127.2.DFF8DD86A0648144.84B45CDFDD8A8F82.733569...\nSporting Goods &gt;Indoor Games &gt;Ping Pong &gt;Ping ...\n60'' Portable Table Tennis Ping Pong Folding T...\nCostway\nnew\nFalse\n\n\n42\n127.2.DFF8DD86A0648144.D009B1C8DBE15487.653046...\nArts & Entertainment &gt;Hobbies & Creative Arts ...\n27 Note Foldable Glockenspiel Xylophone Alumin...\nCostway\nnew\nFalse\n\n\n53\n127.2.DFF8DD86A0648144.4414CEDC31195D37.810057...\n&lt;NA&gt;\nMosquito Repellent Refillable Wristbands - 4PK...\nCliganic\nnew\nFalse\n\n\n55\n127.2.DFF8DD86A0648144.1FE97CECEE9445A1.860000...\nArts & Entertainment &gt;Hobbies & Creative Arts ...\nCeline Computerized Sewing Machine - White\nEversewn\nnew\nFalse\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n11025410\n239604.1.BBD0.E9597205DD0CA762.UB2-61042\nLuggage & Bags &gt;Backpacks\nUrbo 2 Travelpack - Navy\nLOJEL\n&lt;NA&gt;\nFalse\n\n\n11025411\n239604.1.BBD0.3341870201C6F4E7.UB2-61043\nLuggage & Bags &gt;Backpacks\nUrbo 2 Citybag - Navy\nLOJEL\n&lt;NA&gt;\nFalse\n\n\n11025412\n239604.1.BBD0.603591056B13FF27.VLC-L1-BLK-01-K...\nLuggage & Bags &gt;Luggage Accessories &gt;Luggage C...\nVoja - Luggage Cover - Black, Large\nLOJEL\n&lt;NA&gt;\nFalse\n\n\n11025413\n239604.1.BBD0.E2F97E6876AD6420.VLC-M1-BLK-01-K...\nLuggage & Bags &gt;Luggage Accessories &gt;Luggage C...\nVoja - Luggage Cover - Black, Medium\nLOJEL\n&lt;NA&gt;\nFalse\n\n\n11025414\n239604.1.BBD0.A5FD96F75EFF27DB.patch-bundle\nLuggage & Bags\nLetter Patches\nLOJEL\n&lt;NA&gt;\nFalse\n\n\n\n\n788756 rows × 6 columns\n\n\n\nNow, as we can see, the main reason a product name doesn’t include the brand is that many of those products simply lack brand information. However, there are 788,756 items where the brand is available but not mentioned in the product name. Note that this analysis was based on basic string matching.\n\nConclusion\nIncluding the brand in the text embeddings could be helpful, especially for edge cases where the product name is vague or uninformative (as shown below). While we may not see a significant boost in overall accuracy, adding brand information could enhance model performance in such scenarios.\n\ndf[(df['Name'] == '95')]\n\n\n\n\n\n\n\n\nPid\nCategory\nName\nMergedBrand\nCondition\nbrand_in_name\n\n\n\n\n9618512\n202186.2.499B3C49E28651BB.4F0E795813525035.80I...\nApparel & Accessories &gt;Shoes\n95\nGIANVITO ROSSI\nnew\nFalse\n\n\n9618513\n202186.2.499B3C49E28651BB.A7C6CC406F655F18.80I...\nApparel & Accessories &gt;Shoes\n95\nGIANVITO ROSSI\nnew\nFalse\n\n\n9635133\n202186.2.499B3C49E28651BB.DDF4F457AFAAB9D4.79I...\nApparel & Accessories &gt;Shoes\n95\nGIANVITO ROSSI\nnew\nFalse\n\n\n9638757\n202186.2.499B3C49E28651BB.E0C71962BC15F3C3.77I...\nApparel & Accessories &gt;Shoes\n95\nMACH & MACH\nnew\nFalse"
  },
  {
    "objectID": "notebook/eda/eda_metadata_columns.html#product-condition",
    "href": "notebook/eda/eda_metadata_columns.html#product-condition",
    "title": "",
    "section": "Product Condition",
    "text": "Product Condition\nNow let’s examine the ‘Condition’ column to understand which types of products are listed as ‘used’.\n\ndf['Condition'].value_counts()\n\nCondition\nnew            3523196\nNew            3142284\nUsed           2826973\nrefurbished        882\nRefurbished        151\nName: count, dtype: Int64\n\n\n\nprint(\"Number of used books: \", len(df[\n    df['Category'].str.contains('Book', case=False, na=False) & \n    (df['Condition'].str.lower() == 'used')\n]))\n\nprint(\"Number of used Music related products: \", len(df[\n    df['Category'].str.contains('Music', case=False, na=False) & \n    (df['Condition'].str.lower() == 'used')\n]))\n\nprint(\"Number of used Software related products: \", len(df[\n    df['Category'].str.contains('Software', case=False, na=False) & \n    (df['Condition'].str.lower() == 'used')\n]))\n\nprint(\"Number of used items with NaN category: \", len(df[\n    df['Category'].isnull() & \n    (df['Condition'].str.lower() == 'used')\n]))\n\nNumber of used books:  697883\nNumber of used Music related products:  278\nNumber of used Software related products:  352\nNumber of used items with NaN category:  2128459\n\n\n\ndf[\n    df['Category'].notnull() & \n    ~df['Category'].str.contains('Book', case=False, na=False) & \n    ~df['Category'].str.contains('Music', case=False, na=False) & \n    ~df['Category'].str.contains('Software', case=False, na=False) & \n    (df['Condition'].str.lower() == 'used')\n]\n\n\n\n\n\n\n\n\nPid\nCategory\nName\nMergedBrand\nCondition\n\n\n\n\n9423583\n190499.156074.AE28426A76AAE034.974BD6BDF0FAD82...\nMature &gt;Erotic &gt;Pole Dancing Kits\nPreviously Played - LEGO Marvel Super Heroes (...\nWb Games\nUsed\n\n\n\n\n\n\n\n\ndf[\n    df['Category'].isnull() & \n    (df['Condition'].str.lower() == 'used')\n]\n\n\n\n\n\n\n\n\nPid\nCategory\nName\nMergedBrand\nCondition\nbrand_in_name\n\n\n\n\n4299732\n178866.156074.2E7F5E21C961BE0.D84BDA13AA68554F...\n&lt;NA&gt;\n[Signed] Buddy Longway, tome 13 : Le Vent Sauv...\n&lt;NA&gt;\nUsed\nFalse\n\n\n4299733\n178866.156074.2E7F5E21C961BE0.8087BD32F4B5D0BD...\n&lt;NA&gt;\n[Signed] Dragon Rider - Red Endpapers Issue, S...\n&lt;NA&gt;\nUsed\nFalse\n\n\n4299734\n178866.156074.2E7F5E21C961BE0.A3E463DAC8A5D9D0...\n&lt;NA&gt;\n[Signed] Carta Executoria de Hidalguia di Don ...\n&lt;NA&gt;\nUsed\nFalse\n\n\n4299735\n178866.156074.2E7F5E21C961BE0.B1289B1E3DA55568...\n&lt;NA&gt;\n[Signed] Will Eisner's The Spirit Portfolio Ei...\n&lt;NA&gt;\nUsed\nFalse\n\n\n4299736\n178866.156074.2E7F5E21C961BE0.B3E937D8F2FF8703...\n&lt;NA&gt;\n[Signed] Das Reich [with ten original serigrap...\n&lt;NA&gt;\nUsed\nFalse\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n9060133\n178866.156074.99167FE934A5BC7F.89B56B2557BCCDD...\n&lt;NA&gt;\n[Signed] Autographs -- 292 of Britain’s House ...\n&lt;NA&gt;\nUsed\nFalse\n\n\n9060148\n178866.156074.99167FE934A5BC7F.B08EAAB6C08EFE9...\n&lt;NA&gt;\n[Signed] 21 ALS, 5 TLS and 6 APCS E.P.Conkle D...\n&lt;NA&gt;\nUsed\nFalse\n\n\n9060176\n178866.156074.99167FE934A5BC7F.B31DBEA659669C8...\n&lt;NA&gt;\nThe Sunday Times Colour Section (Magazine) 20t...\n&lt;NA&gt;\nUsed\nFalse\n\n\n9060180\n178866.156074.99167FE934A5BC7F.ADE6C8A6D1D5367...\n&lt;NA&gt;\n[Signed] sinbad tome 1 le cratère d'alexandrie...\n&lt;NA&gt;\nUsed\nFalse\n\n\n9424339\n190499.156074.AE28426A76AAE034.B337B85FB8FB290...\n&lt;NA&gt;\nPreviously Played - The Legend Of Zelda: Major...\nNintendo 3Ds\nUsed\nFalse\n\n\n\n\n2128459 rows × 6 columns\n\n\n\n\nConclusion\nIt appears that most used items are books, music-related products, or games. While incorporating the Condition field into text embeddings could potentially improve search accuracy for used books and similar items, it is not considered essential. Instead, we prefer to treat it as a post-search filtering criterion."
  },
  {
    "objectID": "notebook/eda/eda_metadata_columns.html#metadata-columns-summary",
    "href": "notebook/eda/eda_metadata_columns.html#metadata-columns-summary",
    "title": "",
    "section": "Metadata Columns Summary",
    "text": "Metadata Columns Summary\nBelow is a summary of metadata columns and whether they will be included in the text embeddings.\n✅MergedBrand: This will be included in the text embeddings. While most product names already contain brand information, explicitly embedding it can help in edge cases where the product name is ambiguous.\n✅Category: After incorporating category into text embeddings, we observed some improved search results—e.g., the query “Furniture” no longer returns books. However, since 37% of products lack category information and the complexity of categories, we may consider enriching the category manually. For now, including category has already shown positive impact in certain scenarios.\n✅Gender: Although product images can sometimes convey gender information, having explicit gender data is helpful for items where the image alone is ambiguous about the gender—such as watches or rings.\n❌Condition: Most used items are books, music-related products, or games. As confirmed with the partner, this field will not be included in the text embeddings. Instead, it will be considered for post-search filtering.\n❌Size: Due to the high cardinality of the size field and its relatively low importance in common search scenarios, this attribute will also be treated as a post-search filter.\n❌Color: Since product images already capture color information effectively, we will not include color in the text embeddings.\n⚠️Price: Price requires separate handling, as general-purpose models like all-MiniLM-L6-v2 are not trained to interpret or enforce numerical conditions effectively. I experimented with adding price to the text embeddings, but the model still fails to effectively capture or interpret the price information.\nThe returned result should prioritize the category as the most important factor, followed by price, and then brand."
  },
  {
    "objectID": "notebook/eda/eda_metadata_columns.html#product-description",
    "href": "notebook/eda/eda_metadata_columns.html#product-description",
    "title": "",
    "section": "Product Description",
    "text": "Product Description\nNow let’s take a look at the product description column. We’ll start by performing named entity recognition (NER) on the descriptions. We’ll use the sample dataset for now, as processing the full dataset takes quite a long time. You can download the sample data from here.\n\nNamed Entity Recognition\n\ndf = pd.read_csv(\"../../data/csv/sample_100k_v2.csv\")\n\n\nimport spacy\n\nnlp = spacy.load(\"en_core_web_sm\")\n\n# Function to extract named entities and noun phrases\ndef extract_entities_and_phrases(text):\n    if not isinstance(text, str):\n        return [], []\n    doc = nlp(text)\n    entities = [ent.text for ent in doc.ents]\n    noun_phrases = [chunk.text for chunk in doc.noun_chunks]\n    return entities, noun_phrases\n\n\n# Apply to DataFrame\ndf[[\"named_entities\", \"noun_phrases\"]] = df[\"Description\"].apply(\n    lambda x: pd.Series(extract_entities_and_phrases(x))\n)\n\n\npd.set_option('display.max_colwidth', None)\n\ndf[df['Category'].str.contains('Tops', case=False, na=False)][[\"Description\", \"named_entities\", \"noun_phrases\"]].head(10)\n\n\n\n\n\n\n\n\nDescription\nnamed_entities\nnoun_phrases\n\n\n\n\n8\nknitted, medium-weight knit, no appliqués, solid color, deep neckline, long sleeves, no pockets , Color: Turquoise , Size: S\n[Size]\n[knitted, medium-weight knit, no appliqués, solid color, deep neckline, long sleeves, no pockets, Color, Turquoise, Size, S]\n\n\n14\nAdd understated elegance to your wardrobe with this plus size top from Style & Co.\n[Style & Co.]\n[understated elegance, your wardrobe, this plus size top, Style, Co.]\n\n\n27\njersey, brand logo, solid color with print, crew neck, short sleeves, no pockets , Color: Black , Size: L\n[Size]\n[jersey, brand logo, solid color, print, crew neck, short sleeves, no pockets, Color, Black, Size, L]\n\n\n49\nThis graphic Hurley T-shirt will make a perfect year-round wardrobe essential. It features a graphic Hurley logo at chest on a soft jersey.\n[Hurley, Hurley]\n[This graphic Hurley T-shirt, a perfect year-round wardrobe essential, It, a graphic Hurley logo, chest, a soft jersey]\n\n\n55\nFor an extra layer when the temperatures drop, wear the Antigua Women's Pittsburgh Steelers Figure 1/4 Zip. With Pittsburgh Steelers colors and graphics, you&rsquo;ll be able to show off your team pride throughout the entire season and year. Made with soft fabric, you&rsquo;ll stay comfortable throughout the whole game in the Antigua Women's Pittsburgh Steelers Figure 1/4 Zip.Fabric Content:100% polyester\n[the Antigua Women's Pittsburgh Steelers, 1/4, Pittsburgh, the entire season and year, the Antigua Women's Pittsburgh Steelers, 1/4]\n[an extra layer, the temperatures, the Antigua Women's Pittsburgh Steelers Figure, 1/4 Zip, Pittsburgh Steelers colors, graphics, you&rsquo;ll, your team pride, the entire season, year, soft fabric, you&rsquo;ll, the whole game, the Antigua Women's Pittsburgh Steelers Figure, 1/4 Zip, Fabric Content:100% polyester]\n\n\n56\nThis short sleeve T-shirt features a crew neckline and chest signatures.\n[]\n[This short sleeve T-shirt, a crew, neckline, chest signatures]\n\n\n60\nMagic mirror, on the wall - what is the fairest Disney shirt of all add a little Disney magic to your day with a fun Disney T-Shirt celebrate all of your favorites with designs that feature Beauty Rose.\n[Magic, Disney, Disney, day, Disney, Beauty Rose]\n[Magic mirror, the wall, what, the fairest Disney shirt, all, a little Disney magic, your day, Disney T-Shirt, all, your favorites, designs, that, Beauty Rose]\n\n\n67\nsweatshirt fleece, no appliqués, solid color with print, hooded collar, long sleeves, fleece lining, single pocket , Color: White , Size: S\n[Size]\n[sweatshirt fleece, no appliqués, solid color, print, hooded collar, long sleeves, fleece lining, single pocket, Color, White, Size, S]\n\n\n73\nDiversify your T-shirt drawer with our ribbed space dye top. Elbow-length sleeves lend an extra touch of polish to this piece. About The Brand: Our brand was designed for and with women like you. Made for your body, your style, and your truth. As your wardrobe's best friend, these mix-and-match pieces work with everything in your closet.\n[Elbow, polish]\n[your T-shirt drawer, our ribbed space dye top, Elbow-length sleeves, an extra touch, polish, this piece, The Brand, Our brand, women, you, your body, your style, your truth, your wardrobe's best friend, these mix-and-match pieces, everything, your closet]\n\n\n79\njersey, brand logo, solid color, classic neckline, long sleeves, button closing, single chest pocket , Color: White , Size: 15 ½\n[Size, 15, ½]\n[jersey, brand logo, solid color, classic neckline, long sleeves, button closing, single chest pocket, Color, White, Size, 15 ½]\n\n\n\n\n\n\n\n\ndf[df['Category'].str.contains('Pants', case=False, na=False)][[\"Description\", \"named_entities\", \"noun_phrases\"]].head(10)\n\n\n\n\n\n\n\n\nDescription\nnamed_entities\nnoun_phrases\n\n\n\n\n2\n. . . . 2\n[2]\n[]\n\n\n6\ncorduroy, ribbed, no appliqués, solid color, high waisted, elasticized waist, tapered leg, regular fit, multipockets, this brand runs small , Color: Red , Size: 8\n[Size, 8]\n[no appliqués, solid color, high waisted, elasticized waist, leg, regular fit, multipockets, this brand, Red, Size]\n\n\n47\ndenim, brand logo, solid color with appliqués, colored wash, high waisted, belt loops, relaxed fit, 1 button, zipper fastening, multipockets, stretch, machine wash or dry clean, do not bleach, do not tumble dry, cropped, straight-leg jeans , Color: Black , Size: 27\n[denim, 1, Size, 27]\n[denim, brand logo, solid color, appliqués, colored wash, high waisted, belt loops, 1 button, zipper fastening, multipockets, stretch, machine wash, cropped, straight-leg jeans, Black, Size]\n\n\n52\nThe Exaggerated Icon Jogger is for all the icons. This men's pair of joggers feature slanted front pockets, elasticized trim, slanted front pockets, and a back patch pocket. Finished with a large \"True Religion\" text written down one of the legs.\n[True Religion, one]\n[The Exaggerated Icon Jogger, all the icons, This men's pair, joggers, slanted front pockets, trim, slanted front pockets, a back patch pocket, a large \"True Religion\" text, the legs]\n\n\n57\njersey, brand logo, solid color, regular fit, without pockets, stretch, cropped, skinny pants , Color: Ivory , Size: 10\n[Size, 10]\n[jersey, brand logo, solid color, regular fit, pockets, stretch, Color, Ivory, Size]\n\n\n86\nMove effortlessly throughout your day with these unrestrictive 4-way stretch chino pants from Frank and Oak, featuring a streamlined fit and a stylish cropped leg.\n[4, Frank]\n[your day, these unrestrictive 4-way stretch chino pants, Frank, Oak, a streamlined fit, a stylish cropped leg]\n\n\n88\nStep into effortless style and unbeatable comfort with the Women's Mica Denim Crop Drawstring Jogger Pants. These versatile joggers feature a chic cropped design and an adjustable drawstring waist, perfect for customizing your fit. Made from soft, high-quality fabric, they offer the perfect blend of durability and stretch for all-day wear. Whether you're running errands or enjoying a casual day out, these jogger pants will quickly become your go-to wardrobe essential.\n[the Women's Mica Denim Crop Drawstring Jogger Pants, all-day]\n[Step, effortless style, unbeatable comfort, the Women's Mica Denim Crop Drawstring Jogger Pants, These versatile joggers, a chic cropped design, an adjustable drawstring waist, your fit, soft, high-quality fabric, they, the perfect blend, durability, stretch, all-day wear, you, errands, a casual day, these jogger pants, your go]\n\n\n152\nThis high rise, 30\" inseam wide leg jean features a tulip hem made with \"Ab\" Solution technology, meant to mold, hold, and boost your assets\n[30, Ab\" Solution]\n[This high rise, 30\" inseam wide leg jean, a tulip hem, \"Ab\" Solution technology, mold, your assets]\n\n\n219\ncorduroy, no appliqués, solid color, low waisted, regular fit, multipockets, stretch, straight-leg pants , Color: Camel , Size: 32\n[Size, 32]\n[Color, Camel, Size]\n\n\n246\nbootcut pants, woven, solid color, brand logo, embellished, mid rise, regular fit, zipper fastening, button fastenings, multipockets, stretch, machine wash or dry clean, do not bleach, tumble dry , Color: Cream , Size: 4\n[Size, 4]\n[bootcut pants, Cream]\n\n\n\n\n\n\n\n\ndf[df['Category'].str.contains('Shoes', case=False, na=False)][[\"Description\", \"named_entities\", \"noun_phrases\"]].head(10)\n\n\n\n\n\n\n\n\nDescription\nnamed_entities\nnoun_phrases\n\n\n\n\n21\nstained effect, brand logo, solid color, rubber lining, buckle fastening, round toeline, flat, rubber sole, flip flops , Color: Pastel pink , Size: 6\n[Size, 6]\n[stained effect, brand logo, solid color, rubber lining, buckle fastening, round toeline, flat, rubber sole, flip flops, Pastel pink]\n\n\n24\nA fresh update to one of your favorite women's tennis shoes, you'll heighten every occasion. With easy lace up styling, women's casual sneakers with a clean white platform sole go the extra mile in comfort. Sporty women's sneakers with cushioned back collar. Leather, suede, leather/synthetic metallic, leather/suede, leather/fabric, fabric/leather or synthetic upper with a closed round toe. Contour+ Comfort technology for a premium fit and all-day comfort experience. Removable footbed, non-slip outsole. 1.25\" platform heel. Why You'Ll Love It: Designed to the contours of a woman's foot. Available in an inclusive range of sizes and widths for a custom-designed fit and all-day wear. The Beautiful Fit. Est. 1927.\n[one, Sporty, Comfort, all-day, 1.25, Love, all-day, 1927]\n[your favorite women's tennis shoes, you, every occasion, easy lace, styling, women's casual sneakers, a clean white platform sole, the extra mile, comfort, Sporty women's sneakers, cushioned back collar, Leather, suede, leather/synthetic metallic, leather/suede, leather/fabric, fabric/leather, a closed round toe, Contour+ Comfort technology, a premium fit and all-day comfort experience, 1.25\" platform heel, You'Ll, It, the contours, a woman's foot, an inclusive range, sizes, widths, a custom-designed fit and all-day wear, The Beautiful Fit. Est]\n\n\n30\nchunky loafers, glossed-leather, brand logo, solid color, leather lining, round toe, square heel, rubber sole, contains non-textile parts of animal origin , Color: Black , Size: 8\n[Size, 8]\n[chunky loafers, glossed-leather, brand logo, solid color, leather lining, round toe, square heel, rubber sole, non-textile parts, animal origin, Black, Size]\n\n\n31\ncanvas, brand logo, solid color, lace-up, round toe, flat, rubber sole, high-top sneakers , Color: Military green , Size: 11\n[Size, 11]\n[canvas, brand logo, solid color, lace-up, round toe, flat, rubber sole, high-top sneakers, Color, Military green]\n\n\n61\nElevate your winter experience with the Men's Pajar Canada Maddox Ice Grip Boots, engineered to tackle the toughest of winter challenges. The waterproof leather and nylon upper provide a dry and flexible fit, ensuring comfort in harsh conditions. With Pajar's signature ice-gripper sole, you'll stride confidently through icy terrain. Seam-sealed and comfort rated to -25°C (-13°F), these boots feature Pajar-Tex waterproof membrane bootie construction for snug warmth, while the premium removable comfort molded insole, crafted with a cozy wool blend, offers breathability and antimicrobial benefits. Face the cold in style and comfort with the rugged sophistication of the Men's Pajar Canada Maddox Ice Grip Boots.\n[winter, the Men's Pajar Canada Maddox Ice Grip Boots, winter, Pajar, Pajar-Tex, the Men's Pajar Canada Maddox Ice Grip Boots]\n[your winter experience, the Men's Pajar Canada Maddox Ice Grip Boots, winter challenges, The waterproof leather, nylon, a dry and flexible fit, comfort, harsh conditions, Pajar's signature ice-gripper sole, you, icy terrain, °, C, F, these boots, Tex, snug warmth, the premium removable comfort, a cozy wool blend, breathability, antimicrobial benefits, the cold, style, comfort, the rugged sophistication, the Men's Pajar Canada Maddox Ice Grip Boots]\n\n\n68\nYou bring the heat every mission-but when the mission brings the heat right back, the Scorch is here to serve. It's built first for breathability thanks to a lightweight upper patterned with mesh panels*. The Plylolite midsole and the speed lace system work together to make it light, agile and ready when you are-while the outsole is slip resistant and designed for stability. When the heat is on, the Scorch is extra breathable to keep you cool all the way down.Lightweight, strategically patterned upper for maximum air circulation (mesh panels are transparent and may reveal sock color or pattern) Semi-locking YKK Side-Zip Polishable toe Breathable mesh lining Speed lacing for quick adjustments Cushioning open-cell OrthoLite footbed Danner Plyolite EVA midsole offers lasting support and rebound Nylon shank Danner Scorch outsole is slip resistant and designed with a stability control archHeight: 8\"Weight: 40 ozInsulation: Non-Insulated\n[Scorch, first, Plylolite, Scorch, Nylon shank Danner Scorch, 40, Non-Insulated]\n[You, the heat, every mission, the mission, the heat, the Scorch, It, breathability thanks, mesh panels, The Plylolite midsole, it, you, the outsole, stability, the heat, the Scorch, you, maximum air circulation, mesh panels, sock color, pattern, quick adjustments, open-cell OrthoLite, Danner Plyolite EVA midsole, lasting support, Nylon shank Danner Scorch outsole, a stability control]\n\n\n94\nBreak up the monotony with the Run Star Hike Platform Sneaker from Converse! These fashion-forward Chucks feature sturdy denim uppers with SmartFOAM&reg; cushioning, chunky platform midsoles, and&nbsp;two-tone split rubber outsoles for a unique look. Please note: this style runs a half size large.\n[the Run Star Hike Platform Sneaker, half]\n[the monotony, the Run Star Hike Platform Sneaker, Converse, These fashion-forward Chucks, sturdy denim uppers, SmartFOAM&reg, cushioning, chunky platform midsoles, and&nbsp;two-tone, rubber outsoles, a unique look, this style]\n\n\n98\nA utilitarian option with stylish versatility, the Garnerr booties from Style & Co take your look from work to weekend with comfort in mind.\n[Garnerr, Style & Co]\n[A utilitarian option, stylish versatility, the Garnerr booties, Style, Co, your look, work, weekend, comfort, mind]\n\n\n103\nGet ready for summer fun with the Vanni heeled sandals by Easy Street. This stylish sandal combines an on-trend interwoven, chevron pattern to elevate all your favorite outfits. The block heel is a fashionable touch, while the back zipper ensures easy on and off. You'll enjoy all day style and comfort.\n[summer, Vanni, Easy Street, chevron, all day]\n[summer fun, the Vanni, heeled sandals, Easy Street, This stylish sandal, -trend, , chevron pattern, all your favorite outfits, The block heel, a fashionable touch, the back zipper, You, all day style, comfort]\n\n\n115\nleather, studs, brand logo, solid color with appliqués, lined in shearling, buckle fastening, round toe, wedge heel, rubber cleated sole, contains non-textile parts of animal origin, mules , Color: Black , Size: 6\n[Size, 6]\n[leather, studs, brand logo, solid color, appliqués, buckle fastening, round toe, wedge heel, rubber cleated sole, non-textile parts, animal origin, mules, Black, Size]\n\n\n\n\n\n\n\nThe named entities still appear quite messy, making it difficult to extract meaningful information. And we don’t need duplicate information like size, color and brand.\n\n\nFrequent words\nSo instead, I’ll examine the top 500 most frequent words in the description column to see what insights they might reveal.\n\nimport spacy\nfrom collections import Counter\n\nnlp = spacy.load(\"en_core_web_sm\")\n\nall_noun_phrases = []\n\nfor desc in df['Description'].dropna():\n    doc = nlp(desc)\n    all_noun_phrases.extend([chunk.text.lower() for chunk in doc.noun_chunks])\n\n# Count frequency\nfreq = Counter(all_noun_phrases)\n\n\nfor phrase, count in freq.most_common(500):\n    print(phrase, count)\n\nyou 32874\nit 29528\nthat 27136\nhe 12739\nthey 10981\nwho 10910\nsize 9825\nwe 8094\nshe 7928\nwhat 6741\nwhich 6284\nthem 5755\nthis book 5729\nthis 4825\ncolor 4764\nsolid color 4384\nfaster shipping 4367\nbetter service 4367\nthe book 4292\ni 3741\nall 3545\ncomfort 3351\nstyle 3302\nhim 3273\nus 3176\nthe world 3147\nbook 2963\nthe perfect way 2777\nwomen 2770\nno appliqués 2768\nreaders 2751\npages 2717\nbrand logo 2707\ncondition 2662\neyes 2637\ncollection 2616\nwarranty 2597\n24 months 2593\na step 2592\nharmful uv rays 2581\nlife 2572\nthe fashion curve 2558\na discounted price 2557\nsmartbuyglasses 2557\nauthencity 2463\nher 2419\nnon-textile parts 2373\nanimal origin 2371\nmen 2129\nstudents 2095\nthose 1996\nleather 1826\neverything 1767\nstretch 1748\nblack 1722\naccess codes 1712\nlong sleeves 1708\nsome 1688\nmeasurements 1679\npeople 1672\neveryone 1671\ngod 1659\ncds 1651\ntime 1623\nnbsp 1604\n- 1535\nlove 1533\nmultipockets 1528\nthe author 1516\nyou&rsquo;ll 1463\nthe story 1408\nchildren 1392\nanti-scratch coating 1385\nanti-reflective coating 1384\nuv protection coating 1384\nno pockets 1332\namp 1235\nitem 1217\nhistory 1214\nlens color 1212\nlens material 1191\nothers 1184\nsigns 1181\nhimself 1178\nwear 1166\npart 1160\nnotes 1153\nplastic 1116\nanyone 1109\nexcellent condition 1095\ngood condition 1093\nperfect condition 1072\nunread book 1051\nshell 1046\nleather lining 1044\nsomething 1042\ntextbooks 1034\nsupplemental items 1032\nconfidence 1012\nfeatures 1010\nthe history 1007\nthe way 993\nnew condition 981\nthe text 970\ncolors 967\npockets 950\njersey 934\nthese 934\na touch 928\nwork 927\neach 917\nhome 916\nthe game 891\nthemselves 886\nyourself 884\namerica 882\nauthor 881\nme 873\nstep 863\nthe pages 842\nfabric 838\na variety 833\nprint 823\nshort sleeves 814\ncover 812\nthe united states 797\nkids 796\npublisher overstock 792\nart 788\nthe reader 782\ndust jacket 782\nnothing 777\nthriftbooks 775\nsupport 775\nlight 765\nyour loyalty 764\na book 761\nupc 760\nuse 751\nthe end 744\nround toeline 742\nthis volume 739\nvictory 733\nthe field 727\nitself 721\nthe spine 718\nround toe 711\nw 707\nwhite 698\nh 694\naddition 692\ninformation 687\nspine 687\nvery good condition 674\norders 658\nyears 652\nappliqués 644\nmachine wash 644\nanything 644\nwar 643\njesus 639\nyou&rsquo;re 638\nherself 638\nthe work 637\nno doubt 637\npublisher 631\nbooks 625\nwriting 624\nyour favorite team 618\nhighlighting 616\ndurability 614\nthings 609\nthis item 607\nthe life 604\ngraphics 602\nthe first time 602\nthe day 600\nyour wardrobe 599\ndeath 598\ncrewneck 591\ndenim 584\nease 584\nfriends 583\nday 580\nhis life 576\nmodel 576\nyour pride 574\nscience 570\nthe bible 568\norder 567\nthe authors 564\nplain weave 562\nsmall remainder mark 560\nexcess inventory 560\nthe power 556\nthe brand 553\nplace 553\npower 552\nnature 551\nmind 550\nstories 547\nfans 546\ndate 545\na man 545\nhand wash 543\nrubber sole 540\nlining 538\nyour team&rsquo;s colors 533\nyour feet 531\nthe front 530\nleather backing 526\ntwo-tone 526\na series 526\nused book 519\nenglish 516\nthe heart 507\nfun 506\nyear 501\nthis collection 494\nan extra layer 492\nzipper closure 490\njeans 488\nthe time 486\nyour team pride 485\nthe city 485\nsomeone 485\nperformance 483\nwarmth 483\nyour life 481\nearth 481\nmid rise 480\nall-day comfort 479\nhem 478\nsoft fabric 477\nyour look 477\nthe future 477\nwater 476\nthe war 474\nplenty 471\nelegance 470\n110° 469\ntechniques 469\neurope 468\nthe truth 468\nblue 468\nfamily 468\nparents 466\nblack plastic frames 463\nresearch 462\ncompanion materials 459\na collection 454\nround collar 454\nthe body 454\nzipper fastening 452\nimported 452\nthe people 451\nthe past 451\ns 450\npractice 450\nour top priority 448\ngreat books 447\na way 444\nhundreds 444\nmusic 439\nsquare heel 438\nlondon 438\ndetail 437\nitaly 433\nrubber cleated sole 430\npants 429\na world 426\nthe man 426\npolitics 425\nsophistication 422\nsizes 420\nmaterials 418\nminor shelf wear 416\nthe cover 416\nquestions 416\nthe course 414\nchrist 414\nher life 413\nused items 412\nlogo 412\nliterature 410\ntheir lives 410\nsupplementary materials 409\ncotton 409\nnike 409\nyour love 408\nthe temperatures 408\nnight 407\nclosure 407\nculture 406\nfaith 406\nthe development 405\neach chapter 403\nthe back 400\nthe lives 400\ntopics 399\nbutton closing 398\nchina 398\nthe entire season 397\nthe result 396\nphotographs 395\nthe whole game 395\nthe country 395\ntortoiseshell plastic frames 395\ndetails 394\nboth 394\nillustrations 393\nschool 391\nthe role 391\nengland 390\nteachers 390\nused books 389\nwhom 388\ndesign 388\nshoulder 387\nthe subject 386\nexamples 386\nany outfit 386\nsuede 384\nnew, never-used condition 384\nyour style 383\nyour home 379\nideas 378\nreligion 378\nbutton fastenings 376\nlanguage 374\nthousands 372\nmaterial 372\nlightweight knit 372\neffect 371\nthe look 371\nc 369\nthe year 368\nlaces 368\n100% cotton 367\nthe sun 367\nl 366\nno one 365\na wide range 364\nmoisture 364\nhardcover 363\ntechnology 363\nthe church 362\nfood 362\nwidths 361\nphilosophy 361\nsuccess 361\ndepth 361\nmidnight blue 361\na time 360\nthis edition 360\nyou'll 359\nnew york 359\nm 359\na story 355\nthis product 353\nan introduction 353\nparis 353\npeace 352\nyour favorite college team 352\nany occasion 352\nsome shelf 350\nthe art 350\nstock 350\nlimited writing 347\nsweatshirt fleece 346\nfrance 346\nwords 346\nskin 346\nhope 345\nship 344\nfreedom 344\ntips 343\n/highlighting 343\ngrey 341\nthe stories 341\nthe nature 339\nexperience 339\nfashion 339\nthe state 338\ncontrol 338\nfunctionality 337\nformer library book 334\nthe process 334\npoetry 333\nyour body 330\nthe waist 330\nthis work 330\nworld war ii 330\nmoney 330\ntext 329\nsociety 329\na range 329\ncrepe 328\nheight 326\neveryday wear 326\nchapters 324\n100% polyester 324\nthe uk 323\nstability 321\nused-verygood condition 319\nvery limited notes 319\nthe use 318\nleather sole 318\nmovement 317\nsatin 316\ngame day 315\nways 315\nthe house 314\nmodels 314\none 313\nexercises 311\nthe us 310\nterms 310\nall pages 309\nex 309\ninspiration 308\nmaps 307\nknowledge 304\nanimals 302\ncover pages 300\n100% 299\nbrown 299\nessays 298\n1 button 298\na woman 298\nthe contours 297\nthe importance 297\na lifetime 297\ndemand 296\naction 296\nspace 294\naccess 292\nweight 291\ntop 291\nshipping 291\nbelt loops 290\nthe rest 289\ntoe 288\nhand 286\ninterviews 286\ndresses 286\ninsole 286\nevents 285\nbusiness 285\nsolid colour 285\nthe beautiful fit 285\napo/fpo addresses 284\nfabric content:100% polyester 284\nage 284\nmulticolor pattern 284\nanswers 283\nmillions 283\na premium fit and all-day comfort experience 282\nthe chest 282\nadults 281\nfact 281\nimages 281\nthe office 281\nfirst edition 280\nartists 279\nan inclusive range 278\neducation 278\nfront 277\na woman's foot 277\na place 275\nrecipes 275\njustice 274\nlibrary 274\nspecs 274\ninterest 274\nyour closet 273\nscholars 272\nissues 272\nthe top 272\nthe series 271\ncoverage 269\nthe age 269\nthis text 268\nthigh 268\ngreen 268\nlace 268\nthe case 267\nedge 266\nhis wife 265\nadvice 264\nhis work 263\nchristmas 262\na wealth 262\nc max 262\nbeauty 262\nthe study 262\nbreathability 261\na pair 261\ntapered leg 261\nmultiple locations 261\n\n\nI provided the top 500 most frequent words from the product descriptions to ChatGPT for analysis. It grouped them into meaningful groups, which can help us extract useful insights and enrich the data:\nMaterial & Build Quality\nThese words suggest something about the item’s durability, comfort, craftsmanship, or premium feel:\nleather, cotton, polyester, rubber sole, steel, glass, wood, soft, stretch, lightweight, durable, high-quality, handcrafted, waterproof, scratch-resistant\nIntended Use or Target Audience\nThese terms indicate who the product is designed for or its typical use scenarios:\nfor men, for women, for kids, for home, for gym, daily use, office, travel, casual, formal, reading, workwear\nFeatures / Selling Points\nHighlight specific functionalities or product benefits that might influence a purchase decision:\nmachine washable, UV protection, ergonomic, noise-cancelling, wireless, easy to clean, eco-friendly, made in USA, adjustable, foldable, battery operated\nDescriptive Adjectives & Vibes\nThese adjectives evoke a mood, aesthetic, or style associated with the product:\nelegant, cozy, sleek, trendy, classic, vintage, minimalist, sporty, relaxing, professional\nSome others like:\nCondition & Edition: new, used, like new, publisher overstock, former library book, annotated, revised, hardcover, first edition, dust jacket, signed. Mainly for books or media, will ignore for now.\nThemes / Genres / Subject Matter: romance, history, science fiction, philosophy, religion, self-help, memoir, bestseller, spiritual, educational. Minly for books, movie or game, will ignore for now.\nIdeally, if we could perform the same analysis on the entire dataset, we would identify more words for these groups. We could then add all those words as tags and incorporate them into the text embeddings. However, this won’t be able to capture all the important information for all products.\nBelow is the sample code that use the sample data to extract the information mentioned above from the description column as tags, and then incorporate these tags into the text embeddings.\n\ndf = pd.read_csv(\"../../data/csv/sample_100k_v2.csv\")\n\n\nimport re\n\n# Use joined patterns for speed\nMATERIAL_PATTERN = re.compile(\n    r\"\\b(?:leather|cotton|polyester|rubber|nylon|wood|steel|glass|soft|stretch|durable|lightweight|handcrafted|waterproof|scratch[- ]?resistant|machine[- ]?washable)\\b\",\n    re.I\n)\n\nUSE_PATTERN = re.compile(\n    r\"\\b(?:for (?:men|women|kids)|unisex|everyday use|office|travel|casual|formal|gym|workwear|sleepwear|loungewear)\\b\",\n    re.I\n)\n\nFEATURE_PATTERN = re.compile(\n    r\"\\b(?:uv protection|eco[- ]?friendly|wireless|adjustable|foldable|ergonomic|noise[- ]?cancelling|battery[- ]?powered|lightweight|easy to clean|compact|space[- ]?saving|made in [A-Z]{2,})\\b\",\n    re.I\n)\n\nVIBE_PATTERN = re.compile(\n    r\"\\b(?:elegant|cozy|sleek|trendy|classic|vintage|minimalist|sporty|relaxing|professional|bold|modern|artsy|luxurious)\\b\",\n    re.I\n)\n\ndef extract_tags_column(df, pattern, col='Description'):\n    return df[col].fillna('').str.findall(pattern).apply(\n        lambda x: list(set(map(str.lower, x))) if isinstance(x, list) else []\n    )\n\n\ndf['tags_material'] = extract_tags_column(df, MATERIAL_PATTERN)\ndf['tags_use'] = extract_tags_column(df, USE_PATTERN)\ndf['tags_features'] = extract_tags_column(df, FEATURE_PATTERN)\ndf['tags_vibes'] = extract_tags_column(df, VIBE_PATTERN)\n\n\ndf['all_tags'] = (\n    df['tags_material'] + \n    df['tags_use'] + \n    df['tags_features'] + \n    df['tags_vibes']\n).apply(lambda x: \" \".join(sorted(set(x))))\n\n\ndf['CombinedInfo'] = df.apply(\n    lambda row: f\"name: {row['Name']}, gender: {row['Gender']}, brand: {row['MergedBrand']}, category: {row['Category']}, tag: {row['all_tags']}\",\n    axis=1\n)\nlen(df[df['all_tags'].astype(bool)])\n\n38609\n\n\n\ndf[df['all_tags'].astype(bool)][['Name', 'all_tags', 'CombinedInfo']]\n\n\n\n\n\n\n\n\nName\nall_tags\nCombinedInfo\n\n\n\n\n3\nSlickblue Console Sofa Table With 3 Shelves, Metal Frame - Black\nglass steel\nname: Slickblue Console Sofa Table With 3 Shelves, Metal Frame - Black, gender: unisex, brand: Slickblue, category: Furniture &gt;Sofas , tag: glass steel\n\n\n9\nOne Handed: A Guide to Piano Music for One Hand (Music Reference Collection)\ncompact\nname: One Handed: A Guide to Piano Music for One Hand (Music Reference Collection), gender: nan, brand: nan, category: Media &gt;Books , tag: compact\n\n\n13\nBarrier Free Travel: Utah National Parks for Wheelers and Slow Walkers\ntravel\nname: Barrier Free Travel: Utah National Parks for Wheelers and Slow Walkers, gender: nan, brand: nan, category: nan, tag: travel\n\n\n17\nSuzy Levian New York Suzy Levian Sterling Silver Cubic Zirconia Three Row Modern Eternity Band Ring - Silver\nmodern\nname: Suzy Levian New York Suzy Levian Sterling Silver Cubic Zirconia Three Row Modern Eternity Band Ring - Silver, gender: female, brand: Suzy Levian New York, category: Apparel & Accessories &gt;Jewelry &gt;Rings , tag: modern\n\n\n21\nHavaianas Woman Thong sandal Pastel pink Size 6 Rubber\nrubber\nname: Havaianas Woman Thong sandal Pastel pink Size 6 Rubber, gender: female, brand: HAVAIANAS, category: Apparel & Accessories &gt;Shoes , tag: rubber\n\n\n...\n...\n...\n...\n\n\n99991\nDoucal's Man Ankle boots Dark brown Size 7 Soft Leather\nleather rubber\nname: Doucal's Man Ankle boots Dark brown Size 7 Soft Leather, gender: male, brand: DOUCAL'S, category: Apparel & Accessories &gt;Shoes , tag: leather rubber\n\n\n99992\nKids Squall Knit Hat - Lands' End - Red - M-L\ncozy soft\nname: Kids Squall Knit Hat - Lands' End - Red - M-L, gender: unisex, brand: Lands' End, category: Apparel & Accessories &gt;Clothing Accessories &gt;Hats , tag: cozy soft\n\n\n99996\nBoys' Jordan Post Slide Sandals Big Orange Blaze/Orange Peel/University Red\ndurable lightweight sleek\nname: Boys' Jordan Post Slide Sandals Big Orange Blaze/Orange Peel/University Red, gender: nan, brand: Jordan, category: Apparel & Accessories &gt;Shoes , tag: durable lightweight sleek\n\n\n99997\nMen's '47 Brand Gray Distressed Jacksonville Jaguars Downburst Franklin T-shirt - Gray\nclassic vintage\nname: Men's '47 Brand Gray Distressed Jacksonville Jaguars Downburst Franklin T-shirt - Gray, gender: male, brand: '47 Brand, category: Apparel & Accessories , tag: classic vintage\n\n\n99998\nTod's Woman Sandals Garnet Size 5.5 Soft Leather\nleather\nname: Tod's Woman Sandals Garnet Size 5.5 Soft Leather, gender: female, brand: TOD'S, category: Apparel & Accessories &gt;Shoes , tag: leather\n\n\n\n\n38609 rows × 3 columns\n\n\n\n\ndf_sample = df.sample(frac=0.1, random_state=42)\n\n\n# df_sample.to_csv(\"data/csv/processed.csv\", index=False)\n\n\n\nKeyword/Phrase Extraction\nNow let’s try the KeyBERT model to extract relevant keywords or phrases. It uses text embeddings to find meaningful terms. The speed is slow though. When we use KeyBERT, we’ll get keywords or keyphrases that represent the most relevant and meaningful parts of the text — based on the actual semantic content, not just frequency.\nKeyBERT uses a pretrained BERT-based embedding model (e.g., MiniLM) and follows this process:\n\nText Embedding\nIt computes a vector for the entire input text (e.g., a product description).\nCandidate Keyword Extraction\nIt extracts candidate keywords or phrases using n-grams in our cases. A candidate keyword (or candidate phrase) is a potential keyword or keyphrase extracted from the input text before scoring and ranking. These are the raw pieces of text that might be relevant — but KeyBERT hasn’t yet determined how relevant they are. KeyBERT filters and scores them to find the most representative keywords of that text.\nCandidate Embeddings\nIt embeds each candidate phrase using the same embedding model.\nSimilarity Scoring\nFor each candidate:\nComputes cosine similarity between the candidate and the full-text embedding.\nRanking\nRanks all candidates by similarity score and returns the top ones as keywords.\n\n\ndf = pd.read_csv(\"../../data/csv/sample_100k_v2.csv\")\n\n\ndf_sample = df.sample(frac=0.1, random_state=42)\ndf_sample.shape\n\n(10000, 17)\n\n\n\n# Step 1: Install KeyBERT if you haven't already\n# !pip install keybert\n\nfrom keybert import KeyBERT\n\n# Step 2: Initialize the model\nkw_model = KeyBERT()\n\n# Step 3: Define a function to extract top keywords from each description\ndef extract_keybert_keywords(text, top_n=5):\n    if not isinstance(text, str) or not text.strip():\n        return []\n    keywords = kw_model.extract_keywords(\n        text,\n        keyphrase_ngram_range=(1, 2),  # extract 1-gram and 2-gram phrases\n        stop_words='english',\n        use_maxsum=True,\n        nr_candidates=20,  # generate the top 20 n-gram candidates, and rank them using MaxSum similarity to choose the final top_n\n        top_n=top_n\n    )\n    return [kw[0] for kw in keywords]\n\n# Step 4: Apply to your DataFrame\nstart = time.time()\ndf_sample['tags_from_keybert'] = df_sample['Description'].apply(extract_keybert_keywords)\nprint(f\"Process time: {(time.time() - start) / 60:.2f} minutes\")\n\nProcess time: 44.69 minutes\n\n\n\n# Optional: Join all tags into a string for easier viewing\ndf_sample['tags_from_keybert_str'] = df_sample['tags_from_keybert'].apply(lambda x: ', '.join(x))\n\n\npd.set_option('display.max_colwidth', None)\ndf_sample[df_sample['Category'].str.contains('Shoes', case=False, na=False)][['Pid', 'Name', 'Category', 'tags_from_keybert_str']].head(10)\n\n\n\n\n\n\n\n\nPid\nName\nCategory\ntags_from_keybert_str\n\n\n\n\n76434\n158391.2.5542A8E9F71ED4D3.106B68B52D8A3997.439454\nMens Minnetonka Casey Slipper - Charcoal\nApparel & Accessories &gt;Shoes\nminnetonka, stitching available, luxurious suede, way casey, slipper features\n\n\n80917\n127.2.DFF8DD86A0648144.3F5EC200C893296E.197943396380\nFranco Sarto Women's Stevie Mid Shaft Boots - Bronze Leather\nApparel & Accessories &gt;Shoes\nhigh, chic touch, loved mid, dressy casual, women boots\n\n\n51685\n127.2.DFF8DD86A0648144.FBDE27B7AFFBA569.196371757732\nEasy Street Women's Feena Slingback Pumps - Nude\nApparel & Accessories &gt;Shoes\ndress occasion, adjustable buckle, heel sleek, easy street, feena\n\n\n39691\n159390.1.5EDD.A616FA04F2C8CF41.US-17898774CI-9-AI24\nTua By Braccialini Woman Sandals Beige Size 8 Textile fibers\nApparel & Accessories &gt;Shoes\nlining buckle, parts animal, sole contains, fabric appliqués, beige size\n\n\n32260\n127.2.DFF8DD86A0648144.9F032A3E13FFD1C9.197651056965\nLucky Brand Women's Carolie Strappy Espadrille Wedge Sandals - Coffee Quart Leather\nApparel & Accessories &gt;Shoes\naddition jeans, espadrille, asymmetrical straps, wedges lucky, carolie\n\n\n49182\n159390.1.5EDD.8C9A5B4686172176.US-17778370UQ-11-AI24\nPollini Woman Sandals Tan Size 9 Leather\nApparel & Accessories &gt;Shoes\ncontains non, parts animal, toe geometric, slide sandals, textured leather\n\n\n55325\n127.2.DFF8DD86A0648144.5E60F5EE8E431DC4.194655553469\nBCBGeneration Women's Darmena Kitten Heel Dress Booties - Black\nApparel & Accessories &gt;Shoes\nbit, bcbgeneration, dress, darmena, pointed toe\n\n\n93780\n158391.2.6B6A87FA39B97B14.5D152E65285A82D2.808755\nDr. Martens Zebzag Slingback Platform Mule - Ultimate Grey\nApparel & Accessories &gt;Shoes\ndr martens, zebzag, slingback platform, treat feet, mule features\n\n\n38603\n127.2.DFF8DD86A0648144.2958FBD3A1FE1A66.198756092858\nNine West Women's Rhonda Pointy Toe Tapered Heel Dress Pumps - Blue Denim\nApparel & Accessories &gt;Shoes\nslingback strap, style founded, empowers women, pumps features, west rhonda\n\n\n14952\n127.2.DFF8DD86A0648144.E9D49C911A7AADFB.195690637367\nWhite Mountain Women's Bocci Ballet Flat - Beige Boucle Fabric Multi\nApparel & Accessories &gt;Shoes\nwhite mountain, accent design, ballet, chic cap, statement bocci\n\n\n\n\n\n\n\n\ndf_sample[df_sample['Category'].str.contains('Tops', case=False, na=False)][['Pid', 'Name', 'Category', 'tags_from_keybert_str']].head(10)\n\n\n\n\n\n\n\n\nPid\nName\nCategory\ntags_from_keybert_str\n\n\n\n\n50074\n161091.2.52965A6F00B51D20.67CB1DDC41BC6569.6259013\nWomen's Plus Size Waffle Relaxed Long Sleeve Mock Neck Pullover - Lands' End - Green - 1X\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\nstay cozy, raglan, blazer stylish, waffle textured, sleeves ribbed\n\n\n63120\n159390.1.5EDD.E5A11790F33EDD68.US-10284375GO-6-AI24\nThe Editor Man Sweatshirt White Size L Cotton, Polyester\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\nbrand logo, multipockets color, collar long, size, lining zipper\n\n\n41331\n159390.1.5EDD.6325ADAC31DD1B5B.US-10482406RE-7-AI24\nErika Cavallini Woman Top Ivory Size M Alpaca wool, Virgin Wool, Polyamide\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\nsleeves pockets, color detachable, medium weight, ivory, knit appliqués\n\n\n88636\n127.2.DFF8DD86A0648144.107DA92078A4ED86.197178693216\nDemocracy Women's Mineral Washed Embroidered Sweatshirt - Dusty Blue\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\nhem mineral, finish embroidered, women long, scoop neck, sweatshirt features\n\n\n84936\n202186.2.29701ABDE4D61068.F3D79DB39A80914E.80IM9L024-WDA4MzE1\nPrinted Jersey Turtleneck\nClothing & Accessories &gt;Clothing &gt;Shirts & Tops\nvary, model, placement, wearing size42, print placement\n\n\n31776\n159390.1.5EDD.D8D01AE8D151976B.US-14469151HT-2-AI24\nBottega Veneta Woman Sweater Black Size 2 Silk\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\npockets dry, solid, bleach tumble, black size, knit appliqués\n\n\n73691\n159390.1.5EDD.B21A7EAEFF191100.US-10212151FU-7-AI24\nDsquared2 Man T-shirt Light grey Size M Cotton, Viscose\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\ncollar short, color light, pockets, brand, logo solid\n\n\n84610\n159390.1.5EDD.5E7719B2F2A3E4EC.US-10261615CB-7-AI24\nSome Ware Man T-shirt Black Size XL Organic cotton\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\npattern crew, pockets, print brand, logo multicolor, size xl\n\n\n34451\n159390.1.5EDD.48882FA69169598A.US-10272677QE-9-AI24\nTommy Jeans Woman Shirt White Size L Viscose\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\ndot, closing pockets, sleeves button, color white, crepe brand\n\n\n53929\n159390.1.5EDD.52A53EB6B3D6042E.US-14472700KV-9-AI24\nBrunello Cucinelli Man Turtleneck Burgundy Size 50 Cashmere\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\npockets stretch, wash dry, lightweight, knit appliqués, color burgundy\n\n\n\n\n\n\n\n\ndf_sample[df_sample['Category'].str.contains('Pants', case=False, na=False)][['Pid', 'Name', 'Category', 'tags_from_keybert_str']].head(10)\n\n\n\n\n\n\n\n\nPid\nName\nCategory\ntags_from_keybert_str\n\n\n\n\n89577\n160244.2.C6DCFA4883B330A3.AC19CCD9F9E63E35.696691483958\nConnected Petite Popover Jumpsuit - Dark Plum\nApparel & Accessories &gt;Clothing &gt;Pants\npetite, soft popover, bodice, chic connected, jumpsuit finished\n\n\n84463\n161091.2.52965A6F00B51D20.1B5422A9D74B2B7B.5701309\nMen's Traditional Fit Stretch Jeans - Lands' End - Blue - 31\nApparel & Accessories &gt;Clothing &gt;Pants\nfollow footsteps, durable 12, rigger, introduced square, denim breaks\n\n\n39525\n127.2.DFF8DD86A0648144.400F818D3B19973B.755403668516\nDkny Sport Women's Cargo Bungee-Hem Pants - Black\nApparel & Accessories &gt;Clothing &gt;Pants\nstyle, cargo, pair bungee, relaxed fit, drawcord waistband\n\n\n13799\n159390.1.5EDD.F161F1005E5C115F.US-13891094SL-3-AI24\nY's Yohji Yamamoto Woman Pants Black Size 2 Cotton, Bamboo fiber\nApparel & Accessories &gt;Clothing &gt;Pants\nregular fit, solid color, chinos large, unlined zipper, fleece\n\n\n29231\n159390.1.5EDD.CD0860EF397B4AED.US-13587118UW-80-AI24\nDondup Kid Girl Pants Burgundy Size 12 Polyester, Acetate, Polyamide\nApparel & Accessories &gt;Clothing &gt;Pants\nsize 12, multipockets wash, multicolor pattern, jacquard, cleanable iron\n\n\n7144\n127.2.DFF8DD86A0648144.ADBAFFFC1FCE1A5.5056270178630\nSeraphine Women's Denim Maternity Overalls - Black\nApparel & Accessories &gt;Clothing &gt;Pants\nadjustable panels, mama black, expertly tailored, pregnancy, soft stretch\n\n\n99836\n160244.2.C6DCFA4883B330A3.ECA81A1348343BD3.670589702611\nMichael Kors Men's Classic Fit Performance Dress Pants - Navy\nApparel & Accessories &gt;Clothing &gt;Pants\nclassic, designed versatile, michael, dress, kors delivers\n\n\n62005\n159390.1.5EDD.8B468F5FBA06BFBF.US-13884640WN-10-AI24\nGolden Goose Kid Boy Pants Slate blue Size 12 Cotton, Polyester\nApparel & Accessories &gt;Clothing &gt;Pants\nwash 30, color print, logo solid, sporty large, fleece\n\n\n94921\n160244.2.C6DCFA4883B330A3.73433896681E666F.194136888042\nCharter Club Plus Size 100% Linen Cropped Pants, Created for Macy's - Bright White\nApparel & Accessories &gt;Clothing &gt;Pants\nmodern pull, ease charter, size cropped, club plus, crisp linen\n\n\n62122\n202186.2.499B3C49E28651BB.1EE08F18DB5D4483.81IM5B006-MDA4NQ2\nNaN\nApparel & Accessories &gt;Clothing &gt;Pants\n\n\n\n\n\n\n\n\nChatGPT also suggests using a MiniLM + FAISS-style keyword extraction pipeline — similar in concept to KeyBERT, but more customizable and potentially faster when properly tuned. However, since we don’t plan to fine-tune the model, its out-of-the-box performance doesn’t seem as accurate or reliable as KeyBERT.\n\ndf_sample_2 = df.sample(frac=0.001, random_state=42)\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sentence_transformers import SentenceTransformer\nimport numpy as np\n\n# Load the MiniLM model\nmodel = SentenceTransformer('all-MiniLM-L6-v2')\n\ndef extract_keywords(text, top_n=5, ngram_range=(1, 3)):\n    if not isinstance(text, str) or len(text.strip()) == 0:\n        return []\n\n    # Generate candidate keywords/phrases\n    vectorizer = CountVectorizer(ngram_range=ngram_range, stop_words='english').fit([text])\n    candidates = vectorizer.get_feature_names_out()\n\n    # Embed document and candidates\n    doc_embedding = model.encode([text], convert_to_tensor=True)\n    candidate_embeddings = model.encode(candidates, convert_to_tensor=True)\n\n    # Compute cosine similarity\n    similarities = cosine_similarity(doc_embedding.cpu().numpy(), candidate_embeddings.cpu().numpy())[0]\n\n    # Sort and select top N\n    top_indices = np.argsort(similarities)[::-1][:top_n]\n    return [candidates[i] for i in top_indices]\n\n# Example usage on a DataFrame\ndf_sample_2[\"keywords\"] = df_sample_2[\"Description\"].apply(lambda x: extract_keywords(x, top_n=5))\n\n\npd.set_option('display.max_colwidth', None)\ndf_sample_2[df_sample_2['Category'].str.contains('Shoes', case=False, na=False)][['Pid', 'Name', 'Category', 'keywords']].head(10)\n\n\n\n\n\n\n\n\nPid\nName\nCategory\nkeywords\n\n\n\n\n76434\n158391.2.5542A8E9F71ED4D3.106B68B52D8A3997.439454\nMens Minnetonka Casey Slipper - Charcoal\nApparel & Accessories &gt;Shoes\n[new casey slipper, casey slipper features, casey slipper, casey slipper minnetonka, way casey slipper]\n\n\n80917\n127.2.DFF8DD86A0648144.3F5EC200C893296E.197943396380\nFranco Sarto Women's Stevie Mid Shaft Boots - Bronze Leather\nApparel & Accessories &gt;Shoes\n[calf boot women, mid calf boot, calf boot, women boots high, women boots]\n\n\n51685\n127.2.DFF8DD86A0648144.FBDE27B7AFFBA569.196371757732\nEasy Street Women's Feena Slingback Pumps - Nude\nApparel & Accessories &gt;Shoes\n[feena easy street, feena easy, feena, easy street versatile, easy street]\n\n\n39691\n159390.1.5EDD.A616FA04F2C8CF41.US-17898774CI-9-AI24\nTua By Braccialini Woman Sandals Beige Size 8 Textile fibers\nApparel & Accessories &gt;Shoes\n[sandals color beige, textile parts animal, coated fabric, contains non textile, color leather lining]\n\n\n32260\n127.2.DFF8DD86A0648144.9F032A3E13FFD1C9.197651056965\nLucky Brand Women's Carolie Strappy Espadrille Wedge Sandals - Coffee Quart Leather\nApparel & Accessories &gt;Shoes\n[carolie wedges, breezy espadrille heels, espadrille heels, carolie wedges lucky, espadrille heels asymmetrical]\n\n\n49182\n159390.1.5EDD.8C9A5B4686172176.US-17778370UQ-11-AI24\nPollini Woman Sandals Tan Size 9 Leather\nApparel & Accessories &gt;Shoes\n[leather sole contains, color leather, textured leather, heel leather, textured leather appliqués]\n\n\n55325\n127.2.DFF8DD86A0648144.5E60F5EE8E431DC4.194655553469\nBCBGeneration Women's Darmena Kitten Heel Dress Booties - Black\nApparel & Accessories &gt;Shoes\n[bcbgeneration dress bootie, dress bootie darmena, dress bootie, darmena pointed toe, bcbgeneration dress]\n\n\n\n\n\n\n\n\n\nConclusion\nThe keywords generated by KeyBERT appear promising. To enrich the text embeddings, we could apply the KeyBERT model to generate a new keyword tag column and incorporate it into the embedding process.\n\ndf_sample['CombinedInfo'] = df_sample.apply(\n    lambda row: f\"name: {row['Name']}, gender: {row['Gender']}, brand: {row['MergedBrand']}, category: {row['Category']}, tag: {row['tags_from_keybert_str']}\",\n    axis=1\n)\ndf_sample[['Pid', 'Name', 'Category', 'CombinedInfo']]\n\n\n\n\n\n\n\n\nPid\nName\nCategory\nCombinedInfo\n\n\n\n\n75721\n226170.2.82D42C0152FBB491.4B463957A03AAFCE.245VR8SN250XL\nFalken Sincera SN250 A/S 225/45-18 XL 95V Grand Touring All-Season Tire 28294339\nVehicles & Parts &gt;Vehicle Parts & Accessories &gt;Motor Vehicle Parts &gt;Motor Vehicle Wheel Systems &gt;Motor Vehicle Tires &gt;Automotive Tires\nname: Falken Sincera SN250 A/S 225/45-18 XL 95V Grand Touring All-Season Tire 28294339, gender: nan, brand: Falken, category: Vehicles & Parts &gt;Vehicle Parts & Accessories &gt;Motor Vehicle Parts &gt;Motor Vehicle Wheel Systems &gt;Motor Vehicle Tires &gt;Automotive Tires , tag: sincera, falken, grand touring, sn250 195, tire price\n\n\n80184\n178866.156074.820F1205554371C6.B6C77FD0E98449E6.COM9780295988689USED\nWalls of Algiers: Narratives of the City through Text and Image [first edition]\nNaN\nname: Walls of Algiers: Narratives of the City through Text and Image [first edition], gender: nan, brand: nan, category: nan, tag: ottoman, urban studies, paintings architectural, history walls, algiers serves\n\n\n19864\n178866.156074.99167FE934A5BC7F.B66A9A98420EE68A.bi: 30934116025\n[Signed] The Inaugural Album Carter, Jimmy [Near Fine] [Hardcover]\nOffice Supplies &gt;Book Accessories &gt;Book Lights\nname: [Signed] The Inaugural Album Carter, Jimmy [Near Fine] [Hardcover], gender: nan, brand: nan, category: Office Supplies &gt;Book Accessories &gt;Book Lights , tag: cloth title, illustrated endpapers, signed president, beige, quarto 36pp\n\n\n76699\n178866.156074.820F1205554371C6.2778968A7B7BC45B.COM9781887983129USED\nWorking With the Poor: New Insights and Learnings from Development Practitioners\nNaN\nname: Working With the Poor: New Insights and Learnings from Development Practitioners, gender: nan, brand: nan, category: nan, tag: development sustainable, spiritual realm, christian practitioners, understanding poverty, transformation urban\n\n\n92991\n159390.1.5EDD.6CB3287A75491FCF.US-15300316SI-4-AI24\nBikkembergs Infant Boy Baby set Grey Size 6 Cotton, Elastane\nApparel & Accessories &gt;Clothing &gt;Baby & Toddler Clothing &gt;Baby & Toddler Outfits\nname: Bikkembergs Infant Boy Baby set Grey Size 6 Cotton, Elastane, gender: male, brand: BIKKEMBERGS, category: Apparel & Accessories &gt;Clothing &gt;Baby & Toddler Clothing &gt;Baby & Toddler Outfits , tag: wash 30, pockets, multicolor pattern, size, brand logo\n\n\n...\n...\n...\n...\n...\n\n\n5002\n159390.1.5EDD.DF5C7E19B754023D.US-11835500WE-3-AI24\nPedro García Woman Thong sandal Blue Size 5 Textile fibers\nApparel & Accessories &gt;Shoes\nname: Pedro García Woman Thong sandal Blue Size 5 Textile fibers, gender: female, brand: PEDRO GARCÍA, category: Apparel & Accessories &gt;Shoes , tag: design square, size, cleated sole, appliqués floral, satin\n\n\n30151\n178866.156074.820F1205554371C6.56D766DB4D107543.COM9780993467868USED\nDip In Brilliant: An Indian Recipe Adventure with a Contemporary Twist\nNaN\nname: Dip In Brilliant: An Indian Recipe Adventure with a Contemporary Twist, gender: nan, brand: nan, category: nan, tag: purchase signed, brilliant, dip, anand new, copy chef\n\n\n93194\n127.2.DFF8DD86A0648144.5789065A624CB8BF.190052019959\nSuperior Memory Foam Wedge Pillow with Removable Cover - White\nHome & Garden &gt;Linens & Bedding &gt;Bedding &gt;Pillows\nname: Superior Memory Foam Wedge Pillow with Removable Cover - White, gender: unisex, brand: Superior, category: Home & Garden &gt;Linens & Bedding &gt;Bedding &gt;Pillows , tag: heat sensitive, wedge, makes breathing, relaxation memory, pillow shape\n\n\n73199\n127.2.DFF8DD86A0648144.85179F33E58E00F3.724190605080\nMepra Serving Set Fork and Spoon Flatware Set, Set of 2 - Silver-tone\nHome & Garden &gt;Kitchen & Dining &gt;Tableware &gt;Flatware &gt;Flatware Sets\nname: Mepra Serving Set Fork and Spoon Flatware Set, Set of 2 - Silver-tone, gender: unisex, brand: Mepra, category: Home & Garden &gt;Kitchen & Dining &gt;Tableware &gt;Flatware &gt;Flatware Sets , tag: double, ergonomic, highest, quality, serration durable\n\n\n74479\n159390.1.5EDD.EF8EBAD924FF7A3B.US-12958508PJ-1-AI24\nDsquared2 Woman Sweatshirt Pink Size XXS Cotton, Elastane, Polyester\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops\nname: Dsquared2 Woman Sweatshirt Pink Size XXS Cotton, Elastane, Polyester, gender: female, brand: DSQUARED2, category: Apparel & Accessories &gt;Clothing &gt;Shirts & Tops , tag: pockets, solid color, brand logo, sleeves french, size xxs\n\n\n\n\n10000 rows × 4 columns\n\n\n\n\ndf_sample['CombinedInfo'].loc[df_sample['Pid'] == '127.2.DFF8DD86A0648144.5D97B0B9DB1AB9FB.194573409152']\n\n29857    name: Lands' End Big & Tall Super-t Long Sleeve T-Shirt with Pocket - Rich burgundy, gender: male, brand: Lands' End, category: Apparel & Accessories &gt;Clothing &gt;Shirts & Tops , tag: end men, jersey knit, cotton stretches, strongest long, tee ll\nName: CombinedInfo, dtype: object"
  },
  {
    "objectID": "notebook/eda/eda_full.html",
    "href": "notebook/eda/eda_full.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport pyarrow as pa\nimport pyarrow.parquet as pq\nimport cudf\nimport os\nimport glob\n\nIn this notebook, we perform exploratory data analysis (EDA) on the raw product metadata to gain a basic understanding of the dataset and its key characteristics.\n\ngdf = cudf.read_parquet('../../data/csv/raw/raw_data.parquet')\n\n\nMissing Data Overview\nIn this section, we examine each column to identify the presence of missing values. Based on the results below, we find that ShortDescription and Keywords are missing over 90% of their data. Additionally, several other columns also have a significant proportion of missing values.\n\n# % of null rows\nprint(gdf.isnull().sum() / len(gdf) * 100)\n\nPid                  0.000000\nName                 0.223484\nShortDescription    91.055908\nDescription          0.029069\nCategoryId          28.932255\nCategory            28.932255\nImageURL             0.005707\nPrice                0.000943\nPriceCurrency        0.090815\nSalePrice            4.649404\nFinalPrice           0.000943\nDiscount             0.000000\nisOnSale             0.000000\nIsInStock            0.000000\nKeywords            99.178080\nBrand               53.043597\nManufacturer        34.154016\nMPN                 53.870327\nUPCorEAN            61.140028\nSKU                  0.000000\nColor               49.713821\nGender              54.632003\nSize                46.570427\nCondition           10.031526\ndtype: float64\n\n\n\n\nCheck the distinct value count for each column\nIn this step, we examine the number of unique values in each column to understand the variability and potential categorical nature of the data.\nBased on the results below, we found that total CategoryId is 3588, but not sure how much of these categories overlap.\n\ngdf.nunique()\n\nPid                 15147805\nName                 9226783\nShortDescription     1064972\nDescription          5670091\nCategoryId              3588\nCategory               15844\nImageURL             5753395\nPrice                 199462\nPriceCurrency             34\nSalePrice             162116\nFinalPrice            163978\nDiscount                 101\nisOnSale                   2\nIsInStock                  2\nKeywords                5090\nBrand                  21247\nManufacturer           25883\nMPN                  2350925\nUPCorEAN             3541939\nSKU                 10443422\nColor                 170433\nGender                     3\nSize                   55761\nCondition                  5\ndtype: int64\n\n\nLargest cateogries are books and varity of apparels\n\ngdf['Category'].value_counts(normalize=True, dropna=False) * 100\n\nCategory\n&lt;NA&gt;                                                                                                                                                                         28.932255\nMedia &gt;Books                                                                                                                                                                  7.358877\nApparel & Accessories &gt;Shoes                                                                                                                                                  6.447371\nApparel & Accessories &gt;Clothing &gt;Shirts & Tops                                                                                                                                5.735526\nApparel & Accessories                                                                                                                                                         4.258397\n                                                                                                                                                                               ...    \nKunst en entertainment &gt;Hobby's en creatieve vaardigheden &gt;Handwerk en hobby's &gt;Handwerkpatronen en -mallen &gt;Viltmatrijzen                                                    0.000007\nSportartiklar &gt;Utomhusaktiviteter &gt;Cykling &gt;Cykeldelar &gt;Delar till cykelhjul &gt;Cykelfälgar                                                                                     0.000007\nKleding en accessoires &gt;Kleding &gt;Ondergoed en sokken &gt;Accessoires voor lingerie &gt;Jarretelgordels                                                                              0.000007\nHeim & Garten &gt;Haushaltsgeräte &gt;Klimatisierung &gt;Luftentfeuchter                                                                                                               0.000007\nVoertuigen en onderdelen &gt;Voertuigonderdelen en -accessoires &gt;Onderdelen en accessoirs voor vaartuigen &gt;Uitlaatonderdelen voor vaartuigen &gt;Spruitstukken voor vaartuigen      0.000007\nName: proportion, Length: 15845, dtype: float64\n\n\nIf we add USD, CAD and GBP, only about 70% of the data is guranteed to be in English.\n\ngdf['PriceCurrency'].value_counts(normalize=True, dropna=False) * 100\n\nPriceCurrency\nUSD         60.797999\nEUR         11.729155\nCAD          9.201871\nGBP          1.667728\nSEK          1.470434\nCHF          1.266301\nZAR          1.189462\nBRL          1.081857\nAUD          1.071736\nJPY          1.068454\nCOP          1.032319\nCLP          1.008502\nKRW          0.994007\nDKK          0.886994\nNOK          0.861779\nARS          0.630151\nMXN          0.476498\nSAR          0.465825\nPEN          0.405880\nNZD          0.390767\nMYR          0.334183\nAED          0.325199\nKWD          0.280549\nCNY          0.222756\nINR          0.220468\nTRY          0.216626\nRUB          0.185978\nPHP          0.174089\nSGD          0.114254\n&lt;NA&gt;         0.090815\nTHB          0.070950\nHKD          0.023284\nTWD          0.022016\nPLN          0.021048\n0.00 USD     0.000065\nName: proportion, dtype: float64\n\n\n53% of products don’t have Brand information. The brands are also not distributed evenly.\n\ngdf['Brand'].value_counts(normalize=True, dropna=False) * 100\n\nBrand\n&lt;NA&gt;             53.043597\nLands' End        0.997601\nNike              0.639777\nLevi's            0.496545\nRay-Ban           0.427071\n                   ...    \n5052557105641     0.000007\nE-GÓ              0.000007\nBaby Shusher      0.000007\nWoodlink          0.000007\nBanana Panda      0.000007\nName: proportion, Length: 21248, dtype: float64\n\n\nTemu is labelled as a manufacturer even though it’s an ecommerce site. Not sure how these data overlap with Brand.\n\ngdf['Manufacturer'].value_counts(normalize=True, dropna=False) * 100\n\nManufacturer\n&lt;NA&gt;              34.154016\nTemu              13.930955\nLands' End         0.997601\nNike               0.873811\nLevi's             0.499061\n                    ...    \nE-GÓ               0.000007\nBaby Shusher       0.000007\nWoodlink           0.000007\nBanana Panda       0.000007\nBug Bite Thing     0.000007\nName: proportion, Length: 25884, dtype: float64\n\n\n\ngdf['Color'].value_counts(normalize=True, dropna=False) * 100\n\nColor\n&lt;NA&gt;                     49.713821\nBlack                     8.038111\nWhite                     2.272229\nBlue                      1.528520\nRed                       0.908171\n                           ...    \nK-056                     0.000007\nGolden Ear Black          0.000007\nCoyote/Sun Black          0.000007\nRadiant Translucent       0.000007\nMuted Lavender Purple     0.000007\nName: proportion, Length: 170434, dtype: float64\n\n\n\ngdf['Gender'].value_counts(normalize=True, dropna=False) * 100\n\nGender\n&lt;NA&gt;      54.632003\nfemale    24.382343\nmale      15.222691\nunisex     5.762963\nName: proportion, dtype: float64\n\n\n\ngdf['Size'].value_counts(normalize=True, dropna=False) * 100\n\nSize\n&lt;NA&gt;                             46.570427\n01                                1.761429\nM                                 1.600672\nS                                 1.570817\nL                                 1.554807\n                                   ...    \n60in*80in 15lbs                   0.000007\n8mm Frosted                       0.000007\n400*175*120cm                     0.000007\n16inchx24inch(40cmx60cm)x3pcs     0.000007\nTUC664B                           0.000007\nName: proportion, Length: 55762, dtype: float64\n\n\n\ngdf['Condition'].value_counts(normalize=True, dropna=False) * 100\n\nCondition\nnew            37.890660\nNew            33.695159\nUsed           18.375940\n&lt;NA&gt;           10.031526\nrefurbished     0.005733\nRefurbished     0.000982\nName: proportion, dtype: float64"
  }
]